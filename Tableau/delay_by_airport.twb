<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook original-version='18.1' source-build='2018.3.0 (20183.18.1018.1932)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='flights+' inline='true' name='federated.18a829h0uw2p4x1cqz7j411idywe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flights' name='textscan.1moebub0qu59fk1h1mvr50pulpki'>
            <connection class='textscan' directory='/Users/K/UCBEL201806DATA2-Class-Repository-DATA/Project3/Project/Tammy&apos;s' filename='airports.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='IF [flights.csv+].[Table Name] = &quot;flights.csv&quot; THEN [flights.csv+].[ORIGIN_AIRPORT]&#13;&#10;ELSE [flights.csv+].[DESTINATION_AIRPORT]&#13;&#10;END' />
              <expression op='[airports.csv].[IATA_CODE]' />
            </expression>
          </clause>
          <relation all='true' name='flights.csv+' type='union'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='YEAR' />
              <column datatype='integer' name='MONTH' />
              <column datatype='integer' name='DAY' />
              <column datatype='integer' name='DAY_OF_WEEK' />
              <column datatype='string' name='AIRLINE' />
              <column datatype='integer' name='FLIGHT_NUMBER' />
              <column datatype='string' name='TAIL_NUMBER' />
              <column datatype='string' name='ORIGIN_AIRPORT' />
              <column datatype='string' name='DESTINATION_AIRPORT' />
              <column datatype='integer' name='SCHEDULED_DEPARTURE' />
              <column datatype='integer' name='DEPARTURE_TIME' />
              <column datatype='integer' name='DEPARTURE_DELAY' />
              <column datatype='integer' name='TAXI_OUT' />
              <column datatype='integer' name='WHEELS_OFF' />
              <column datatype='integer' name='SCHEDULED_TIME' />
              <column datatype='integer' name='ELAPSED_TIME' />
              <column datatype='integer' name='AIR_TIME' />
              <column datatype='integer' name='DISTANCE' />
              <column datatype='integer' name='WHEELS_ON' />
              <column datatype='integer' name='TAXI_IN' />
              <column datatype='integer' name='SCHEDULED_ARRIVAL' />
              <column datatype='integer' name='ARRIVAL_TIME' />
              <column datatype='integer' name='ARRIVAL_DELAY' />
              <column datatype='integer' name='DIVERTED' />
              <column datatype='integer' name='CANCELLED' />
              <column datatype='string' name='CANCELLATION_REASON' />
              <column datatype='integer' name='AIR_SYSTEM_DELAY' />
              <column datatype='integer' name='SECURITY_DELAY' />
              <column datatype='integer' name='AIRLINE_DELAY' />
              <column datatype='integer' name='LATE_AIRCRAFT_DELAY' />
              <column datatype='integer' name='WEATHER_DELAY' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.1moebub0qu59fk1h1mvr50pulpki' name='flights.csv' table='[flights#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='YEAR' ordinal='0' />
                <column datatype='integer' name='MONTH' ordinal='1' />
                <column datatype='integer' name='DAY' ordinal='2' />
                <column datatype='integer' name='DAY_OF_WEEK' ordinal='3' />
                <column datatype='string' name='AIRLINE' ordinal='4' />
                <column datatype='integer' name='FLIGHT_NUMBER' ordinal='5' />
                <column datatype='string' name='TAIL_NUMBER' ordinal='6' />
                <column datatype='string' name='ORIGIN_AIRPORT' ordinal='7' />
                <column datatype='string' name='DESTINATION_AIRPORT' ordinal='8' />
                <column datatype='integer' name='SCHEDULED_DEPARTURE' ordinal='9' />
                <column datatype='integer' name='DEPARTURE_TIME' ordinal='10' />
                <column datatype='integer' name='DEPARTURE_DELAY' ordinal='11' />
                <column datatype='integer' name='TAXI_OUT' ordinal='12' />
                <column datatype='integer' name='WHEELS_OFF' ordinal='13' />
                <column datatype='integer' name='SCHEDULED_TIME' ordinal='14' />
                <column datatype='integer' name='ELAPSED_TIME' ordinal='15' />
                <column datatype='integer' name='AIR_TIME' ordinal='16' />
                <column datatype='integer' name='DISTANCE' ordinal='17' />
                <column datatype='integer' name='WHEELS_ON' ordinal='18' />
                <column datatype='integer' name='TAXI_IN' ordinal='19' />
                <column datatype='integer' name='SCHEDULED_ARRIVAL' ordinal='20' />
                <column datatype='integer' name='ARRIVAL_TIME' ordinal='21' />
                <column datatype='integer' name='ARRIVAL_DELAY' ordinal='22' />
                <column datatype='integer' name='DIVERTED' ordinal='23' />
                <column datatype='integer' name='CANCELLED' ordinal='24' />
                <column datatype='string' name='CANCELLATION_REASON' ordinal='25' />
                <column datatype='integer' name='AIR_SYSTEM_DELAY' ordinal='26' />
                <column datatype='integer' name='SECURITY_DELAY' ordinal='27' />
                <column datatype='integer' name='AIRLINE_DELAY' ordinal='28' />
                <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='29' />
                <column datatype='integer' name='WEATHER_DELAY' ordinal='30' />
              </columns>
            </relation>
            <relation connection='textscan.1moebub0qu59fk1h1mvr50pulpki' name='flights.csv1' table='[flights#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='YEAR' ordinal='0' />
                <column datatype='integer' name='MONTH' ordinal='1' />
                <column datatype='integer' name='DAY' ordinal='2' />
                <column datatype='integer' name='DAY_OF_WEEK' ordinal='3' />
                <column datatype='string' name='AIRLINE' ordinal='4' />
                <column datatype='integer' name='FLIGHT_NUMBER' ordinal='5' />
                <column datatype='string' name='TAIL_NUMBER' ordinal='6' />
                <column datatype='string' name='ORIGIN_AIRPORT' ordinal='7' />
                <column datatype='string' name='DESTINATION_AIRPORT' ordinal='8' />
                <column datatype='integer' name='SCHEDULED_DEPARTURE' ordinal='9' />
                <column datatype='integer' name='DEPARTURE_TIME' ordinal='10' />
                <column datatype='integer' name='DEPARTURE_DELAY' ordinal='11' />
                <column datatype='integer' name='TAXI_OUT' ordinal='12' />
                <column datatype='integer' name='WHEELS_OFF' ordinal='13' />
                <column datatype='integer' name='SCHEDULED_TIME' ordinal='14' />
                <column datatype='integer' name='ELAPSED_TIME' ordinal='15' />
                <column datatype='integer' name='AIR_TIME' ordinal='16' />
                <column datatype='integer' name='DISTANCE' ordinal='17' />
                <column datatype='integer' name='WHEELS_ON' ordinal='18' />
                <column datatype='integer' name='TAXI_IN' ordinal='19' />
                <column datatype='integer' name='SCHEDULED_ARRIVAL' ordinal='20' />
                <column datatype='integer' name='ARRIVAL_TIME' ordinal='21' />
                <column datatype='integer' name='ARRIVAL_DELAY' ordinal='22' />
                <column datatype='integer' name='DIVERTED' ordinal='23' />
                <column datatype='integer' name='CANCELLED' ordinal='24' />
                <column datatype='string' name='CANCELLATION_REASON' ordinal='25' />
                <column datatype='integer' name='AIR_SYSTEM_DELAY' ordinal='26' />
                <column datatype='integer' name='SECURITY_DELAY' ordinal='27' />
                <column datatype='integer' name='AIRLINE_DELAY' ordinal='28' />
                <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='29' />
                <column datatype='integer' name='WEATHER_DELAY' ordinal='30' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1moebub0qu59fk1h1mvr50pulpki' name='airports.csv' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='IATA_CODE' ordinal='0' />
              <column datatype='string' name='AIRPORT' ordinal='1' />
              <column datatype='string' name='CITY' ordinal='2' />
              <column datatype='string' name='STATE' ordinal='3' />
              <column datatype='string' name='COUNTRY' ordinal='4' />
              <column datatype='real' name='LATITUDE' ordinal='5' />
              <column datatype='real' name='LONGITUDE' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>DAY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_OF_WEEK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY_OF_WEEK]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>DAY_OF_WEEK</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRLINE]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>AIRLINE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FLIGHT_NUMBER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FLIGHT_NUMBER]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>FLIGHT_NUMBER</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAIL_NUMBER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TAIL_NUMBER]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>TAIL_NUMBER</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORIGIN_AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORIGIN_AIRPORT]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>ORIGIN_AIRPORT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DESTINATION_AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DESTINATION_AIRPORT]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>DESTINATION_AIRPORT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_DEPARTURE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_DEPARTURE]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>SCHEDULED_DEPARTURE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEPARTURE_TIME]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>DEPARTURE_TIME</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEPARTURE_DELAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>DEPARTURE_DELAY</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_OUT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAXI_OUT]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>TAXI_OUT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_OFF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WHEELS_OFF]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>WHEELS_OFF</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_TIME]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>SCHEDULED_TIME</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELAPSED_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ELAPSED_TIME]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>ELAPSED_TIME</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIR_TIME]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>AIR_TIME</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISTANCE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DISTANCE]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>DISTANCE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_ON</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WHEELS_ON]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>WHEELS_ON</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_IN</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAXI_IN]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>TAXI_IN</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_ARRIVAL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_ARRIVAL]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>SCHEDULED_ARRIVAL</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARRIVAL_TIME]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>ARRIVAL_TIME</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARRIVAL_DELAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>ARRIVAL_DELAY</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIVERTED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DIVERTED]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>DIVERTED</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CANCELLED]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>CANCELLED</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLATION_REASON</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CANCELLATION_REASON]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>CANCELLATION_REASON</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_SYSTEM_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIR_SYSTEM_DELAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>AIR_SYSTEM_DELAY</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECURITY_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SECURITY_DELAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>SECURITY_DELAY</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIRLINE_DELAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>AIRLINE_DELAY</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATE_AIRCRAFT_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LATE_AIRCRAFT_DELAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>LATE_AIRCRAFT_DELAY</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WEATHER_DELAY]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>WEATHER_DELAY</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[flights.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_CODE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
      <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
      <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
      <column caption='Air Time' datatype='integer' name='[AIR_TIME]' role='measure' type='quantitative' />
      <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
      <column caption='Arrival Time' datatype='integer' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
      <column caption='Cancellation Reason' datatype='string' name='[CANCELLATION_REASON]' role='dimension' type='nominal' />
      <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Route Identifier' datatype='string' name='[Calculation_1348265206206107648]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[ORIGIN_AIRPORT] + &quot;_&quot; + [DESTINATION_AIRPORT]' />
      </column>
      <column caption='Route Order' datatype='string' name='[Calculation_1348265206206554113]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &quot;flights.csv&quot; THEN &quot;1&quot;&#13;&#10;ELSE &quot;2&quot;&#13;&#10;END' />
      </column>
      <column caption='Route Location' datatype='string' name='[Calculation_1348265206207844355]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &quot;flights.csv&quot; THEN [ORIGIN_AIRPORT]&#13;&#10;ELSE [DESTINATION_AIRPORT]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[DAY]' role='dimension' type='quantitative' />
      <column caption='Day Of Week' datatype='integer' name='[DAY_OF_WEEK]' role='dimension' type='quantitative' />
      <column caption='Departure Delay' datatype='integer' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
      <column caption='Departure Time' datatype='integer' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
      <column caption='Destination Airport' datatype='string' name='[DESTINATION_AIRPORT]' role='dimension' type='nominal' />
      <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
      <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
      <column caption='Elapsed Time' datatype='integer' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
      <column caption='Flight Number' datatype='integer' name='[FLIGHT_NUMBER]' role='dimension' type='ordinal' />
      <column caption='Iata Code' datatype='string' name='[IATA_CODE]' role='dimension' type='nominal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Origin Airport' datatype='string' name='[ORIGIN_AIRPORT]' role='dimension' type='nominal' />
      <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
      <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
      <column caption='Scheduled Time' datatype='integer' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tail Number' datatype='string' name='[TAIL_NUMBER]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='integer' name='[TAXI_IN]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[TAXI_OUT]' role='measure' type='quantitative' />
      <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
      <column caption='Wheels Off' datatype='integer' name='[WHEELS_OFF]' role='measure' type='quantitative' />
      <column caption='Wheels On' datatype='integer' name='[WHEELS_ON]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <drill-paths>
        <drill-path name='COUNTRY, STATE, CITY'>
          <field>[COUNTRY]</field>
          <field>[STATE]</field>
          <field>[CITY]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.525517' measure-ordering='alphabetic' measure-percentage='0.474483' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='YEAR' />
        <field-sort-custom-order field='MONTH' />
        <field-sort-custom-order field='DAY' />
        <field-sort-custom-order field='DAY_OF_WEEK' />
        <field-sort-custom-order field='AIRLINE' />
        <field-sort-custom-order field='FLIGHT_NUMBER' />
        <field-sort-custom-order field='TAIL_NUMBER' />
        <field-sort-custom-order field='ORIGIN_AIRPORT' />
        <field-sort-custom-order field='Calculation_1348265206206107648' />
        <field-sort-custom-order field='DESTINATION_AIRPORT' />
        <field-sort-custom-order field='SCHEDULED_DEPARTURE' />
        <field-sort-custom-order field='DEPARTURE_TIME' />
        <field-sort-custom-order field='DEPARTURE_DELAY' />
        <field-sort-custom-order field='TAXI_OUT' />
        <field-sort-custom-order field='WHEELS_OFF' />
        <field-sort-custom-order field='SCHEDULED_TIME' />
        <field-sort-custom-order field='ELAPSED_TIME' />
        <field-sort-custom-order field='AIR_TIME' />
        <field-sort-custom-order field='DISTANCE' />
        <field-sort-custom-order field='WHEELS_ON' />
        <field-sort-custom-order field='TAXI_IN' />
        <field-sort-custom-order field='SCHEDULED_ARRIVAL' />
        <field-sort-custom-order field='ARRIVAL_TIME' />
        <field-sort-custom-order field='ARRIVAL_DELAY' />
        <field-sort-custom-order field='DIVERTED' />
        <field-sort-custom-order field='CANCELLED' />
        <field-sort-custom-order field='CANCELLATION_REASON' />
        <field-sort-custom-order field='AIR_SYSTEM_DELAY' />
        <field-sort-custom-order field='SECURITY_DELAY' />
        <field-sort-custom-order field='AIRLINE_DELAY' />
        <field-sort-custom-order field='LATE_AIRCRAFT_DELAY' />
        <field-sort-custom-order field='WEATHER_DELAY' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Calculation_1348265206207844355' />
        <field-sort-custom-order field='Calculation_1348265206206554113' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Air Delay</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+' name='federated.18a829h0uw2p4x1cqz7j411idywe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18a829h0uw2p4x1cqz7j411idywe'>
            <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='Route Identifier' datatype='string' name='[Calculation_1348265206206107648]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ORIGIN_AIRPORT] + &quot;_&quot; + [DESTINATION_AIRPORT]' />
            </column>
            <column caption='Route Order' datatype='string' name='[Calculation_1348265206206554113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;flights.csv&quot; THEN &quot;1&quot;&#13;&#10;ELSE &quot;2&quot;&#13;&#10;END' />
            </column>
            <column caption='Destination Airport' datatype='string' name='[DESTINATION_AIRPORT]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Origin Airport' datatype='string' name='[ORIGIN_AIRPORT]' role='dimension' type='nominal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1348265206206107648]' derivation='None' name='[none:Calculation_1348265206206107648:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1348265206206554113]' derivation='None' name='[none:Calculation_1348265206206554113:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORIGIN_AIRPORT]' derivation='None' name='[none:ORIGIN_AIRPORT:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18a829h0uw2p4x1cqz7j411idywe].[none:ORIGIN_AIRPORT:nk]'>
            <groupfilter expression='CONTAINS(LOWER([ORIGIN_AIRPORT]), LOWER(&apos;sjc&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='sjc' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:ORIGIN_AIRPORT:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18a829h0uw2p4x1cqz7j411idywe].[none:ORIGIN_AIRPORT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:LATITUDE:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]' />
              <lod column='[federated.18a829h0uw2p4x1cqz7j411idywe].[none:Calculation_1348265206206107648:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:LATITUDE:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]' />
              <lod column='[federated.18a829h0uw2p4x1cqz7j411idywe].[none:Calculation_1348265206206107648:nk]' />
              <path column='[federated.18a829h0uw2p4x1cqz7j411idywe].[none:Calculation_1348265206206554113:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.053977899253368378' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:LATITUDE:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]' />
              <lod column='[federated.18a829h0uw2p4x1cqz7j411idywe].[none:Calculation_1348265206206107648:nk]' />
              <size column='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]' />
              <lod column='[federated.18a829h0uw2p4x1cqz7j411idywe].[none:Calculation_1348265206206554113:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18a829h0uw2p4x1cqz7j411idywe].[avg:LATITUDE:qk] + [federated.18a829h0uw2p4x1cqz7j411idywe].[avg:LATITUDE:qk])</rows>
        <cols>[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[federated.18a829h0uw2p4x1cqz7j411idywe].[none:ORIGIN_AIRPORT:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18a829h0uw2p4x1cqz7j411idywe].[avg:ARRIVAL_DELAY:qk]</field>
            <field>[federated.18a829h0uw2p4x1cqz7j411idywe].[none:Calculation_1348265206206107648:nk]</field>
            <field>[federated.18a829h0uw2p4x1cqz7j411idywe].[none:Calculation_1348265206206554113:nk]</field>
            <field>[federated.18a829h0uw2p4x1cqz7j411idywe].[none:ORIGIN_AIRPORT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{014D3ACE-F957-46D6-9FD7-F503E80B9B46}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aYwl63nf9699OfvS+zLT0zNz5w4vSYkgKIAxqchURENSFFNSAigLnERI
      kMBwPiRAFsRBAsSAPzgB5DiIlchBPsRhYsAyKFux6CSyTFMUKUo2eS8v752te3qme7qnu8++
      Vp3a8qHv805VnTpbb9M98/6Awcx0n3OqTp1T7/O8z/J/hCAIAnA4HA7nrUN83SfA4XA4nNcD
      NwAcDofzlsINAIfD4bylyPEffPzxx/jhD394rgepVqvwff/VQWUZiqJM9VzP8zAYDM58DknH
      DIIAlmUBAFKpFEzTnOq1+v0+ut0ugiCAqqpwXReiKKJQKJz5PK8bg8Eg8fORJAmlUgnVahWe
      50EQBGiaBtM04Xkems0mfN+H4zjwfR+CIEDXdQiCgEwmA13XUavV4Lpu5HXDnxnnFblcDs1m
      81KPeevWLXQ6HRwdHUV+rqoqPM+D7/tYXl6GKIp48eIF7t27h729PXQ6HayursJxHBweHkKW
      ZTiOA1EUcf/+fezu7kLTNBSLRezt7QEAbt68id3dXfZ9UBQFsiyjWCzi5cuXaLVaoHSmJEns
      z2AwgOd5F/L+s9ks2u02LiqNKkkSFEWBIAiRn9u2HVlPk85L07SpjjFkAH7wgx/gN37jN2Y8
      1dEEQYDHjx+zL6cgCDBNE+l0eqrnW5aFTqcDAPB9/1QXWxRFFItFSJIU+Xm73Uav1wNw8gUr
      lUrwfR+yPHRZIrRaLVQqFXieh4WFBei6DuDki/+2EQQBKpUK+v3+0O8+97nP4cmTJ+h2u1hb
      W2PXd3t7G81mE0EQwPd9tFotDAYDFAoFqKoKQRBw9+5dGIaBhw8fRl673++j1Wpd5lu8Fty5
      cwePHz++1GP+6q/+Kp4/f47vf//7kZ/ruo7NzU2Uy2UsLS2h0+ngm9/8Jn79138dv/M7v4OX
      L1/i537u52BZFr797W+jXC5jY2MDqVQKW1tb+OY3v4m1tTXIsoydnR0MBgP8wi/8An7v934P
      QRAgnU6jWCwilUphfn4eX//619l9fJncunULOzs7YxfjsyKKIjRNgyiKbP2a9P3f3NxEsVic
      6vXHr3TngCAIWF5eRq/Xg6Zp0DRtaIEVBGHkwq7rOltge70e2u32TMdXVRWZTGZo8QdOLKyq
      qhBFEb1eD71eD5IkIZ/PQ9O0xB2DIAjIZrPsnERRnGgw3mQEQUC5XIbjOGi1WpEbsdPpYG5u
      Djdv3oTruvjoo48ii7kgCJAkCaZpQtM09hmR03Dr1i0sLy9ja2sLvu/D933mDHBeP5VKBcvL
      y5H7VxRFfOUrX4EgCHjw4AE0TRvrGGWzWfzKr/wK3n//fdTrddi2DeDEw7dtG/1+n33m1WoV
      m5ubuHv3Lv7kT/4E6XQa8/Pz7DlvIr7vJzpX45hlx3MpOYBUKgXDMKDr+tBiKcsySqXSxNcg
      b3FWMpnMyAVaVVXk83nkcjkIggBBEOD7PqrV6tDWLggCPHjwAI8ePUK9XoeqqlBV9a1e/AlB
      EKCqKkqlUsTz8DwPxWIRtVptaPEPo6oqTNOEKL76Ovq+j2aziXw+D1VV0ev1hkKJnNfLBx98
      gPX1dXzhC1/A/Pw83nvvPWSzWSwsLODJkyeo1WoTw6rZbBau6+Lw8JCFVAGgXq/jxo0b6Ha7
      7B52HAelUgl7e3s4ODhgTthloOv61GHr183Lly+nvk8uZfUSBAH5fB6WZSEIAgRBAEmSEAQB
      i70bhgHHceC6buKOwDAM1Gq1xNcXRRHpdDqyNZJlGZIkDcXPwoxavAVBQK/XQz6fjzx/c3MT
      oihGFirOKwRBQCqVgmVZ6PV6OD4+Rr1eH/m5hZ8HnHyO4c+9UqmgXC7j9u3b+NGPfoRut3uh
      58+ZjVqthm984xv44he/iM9+9rNoNBrY2dnB97//fXz5y19Gu93G0dERLMuCaZo4PDxkMfxm
      s4nBYICjoyPUajV85StfwYsXL/D8+XPU63V4noeXL1/ia1/7Gl68eIG9vT34vo8PPvgAX/3q
      V7G+vo5nz57h8PDwUt7rwsICNE3Do0ePLuV4Z8GyLGxtbWFtbQ2CIECWZbiuC1mW2dpF95wQ
      bwT7+te/fu45AMdxcHx8DM/z2A1umiYsy0KhUECn04GiKMjlcmi328hms+h0OpGkVqlUQr/f
      x7NnzyLWLZ/PY319HZ1OB9vb2wAATdOYV39aSqUSUqnUqZ//NtPpdKZa9JPCfqqqRpLKoihi
      eXkZCwsL+Pjjj/H06dNzP99ZkWU58l2+CryOHABBTlH4msiyzHbtpVIJ8/PzLDH84sULWJYF
      QRCwuroKwzDgeR5kWUa9Xsfx8TFu3LiBp0+fQpIkdr+HnUcArHjgoneFmUwGq6urOD4+RqVS
      YT+/jBzAWdB1HYPBAJIkwXEcyLKMhYUFCIKAxcXFE+Nw0SdRr9cjcVsKnXQ6HciyDNM0MRgM
      UK1WUSqVWCVNNptFv9/HYDBAEASQZRnlchm1Wg2tVgvZbBbLy8tIpVLMMBCTPP9xBEGATCYT
      2bo6joN6vQ5RFFEul095Jd4eUqkUgiBAvV4f+ZikxTMIgqHdle/72NvbQ7vdxjvvvINKpTJz
      Hug8UBSFnbOiKNB1HZZlDVUpjXquqqqQJAm9Xm+q51wnKD8TJvwes9lsZOe8vLyMJ0+eQBAE
      KIoSyaOZpsmucxAEidcqHOO+DCNM53/doGo5+mwEQWDVVsSFGwCKsdNNm8vl4Ps+bNtmF7ZY
      LA6VUFKytVKpQBAEdDodaJqG27dvM29BEATYto2trS32paB49GlQVRWFQgGiKEYMSLfbhWVZ
      lxpzvM4IgoB0Og3P82aq2KFdQdLuoNlsolar4fOf/zy+973vzZwYOyuyLCOdTke+F6qqotvt
      QhAEDAaDRE9QURQUCgX2PFmW0e/3WTj0baDZbELXdbbwkGMQBAG2trbYvRwPAb5u0uk0+v0+
      stnsmaIJVwUqKQ1/Ty/crFH5Uj6fZzF1SZKwvLwcKQVNusCGYUBVVbb1o9cL18bSdpLQdX3q
      Gtg4uVxuqPqn0+mg3W7Dtm1WhXSVvqRXFcr7lEqlsd5T+LMFTryWUeW+z58/h+/7+NznPnch
      5zyOfr8f8UbJeyUHp1AojEx4hr/biqIgm80im81e+DlfFer1emTRCYf4KEQ8GAxgWdaVqegR
      BAFLS0u4desWCzmVSiWsrKy85jM7HYqiIJPJAABzWIAr3gksCALm5uYwPz8/sskqXHYoiuKp
      vf+kRrFer8fq1SmP8eDBA+zv73MjMCWpVAoLCwuJfR/UExJeIKkai3YB4YUjCAJ0Op3Xth0P
      ggDtdjuSjKbGNEmSkMlkkE6nIyXHjuMk7lYo/Pk24Ps+nj59Ct/34Xnepe/eTgOtB2FnUhRF
      HB8fv8azOj3x6AV9h6+0AQBO4vmGYSTW8QOI3ESyLJ86TGOaZqQqyLZtPH78GEdHR2i1WpGb
      vtVqjY1vc6JQGISS6hRio8VTURQUi8XIwh6OA4d5+fIlTNPEzZs3L+38iWazybrAu90u6z6l
      xkDHcZBKpYa8+06nM/Q+qEv1bYFCtU+ePLkWORDDMIYcjaOjo6HP7DqUgZOjFabX68H3/atv
      AMbhed5QYxCVPc0ClS8Sruvi6OiIJaH6/T573fn5eaysrMAwjHN5D28LgiCgWCxifn4+Euul
      3VW9XmefA13bVquFdrsdCfG5rotnz57h3r17M9VlU0gqm82O/OxEUYSu6zAMI3HHEl7EO50O
      +v0+6vU626k0Gg3WSR52WOK5g/A5vU3Ytg3HcV73aUxF+LtFn2948afdwY0bN2beyem6zkKG
      Z9nNhnfLs0Jr59U3X2Og2CFBniTFuGzbHhtTDIIAuq4jl8tFPvButwvP81AoFJjnTxVH16UZ
      5CoiCMJQLJ0IgoB9KenzEwSBlQuGd3b1eh1ra2tYXFzE7u7uxOOKosg+u0qlAlVVkU6nIcsy
      84Rc14Xv+5G8k6Io6Ha7EEWRVbrEzz38f+pUzmazKJfLLPadFJak93RdFsS3jXDIudvtYn9/
      P7LWFAoFVhlGFU6TykElSUI2m2U5TFIpoNCY53nse0h/x7t6VVVlec6w8bAsa6QWVJLDIwjC
      SW/AVFfjihKvxWbNDZ8Ij6mqilQqNVSTTkJTVC5Kz6N4bbPZhOM4rPxU13W0Wi04joO5ubnL
      e4NvIbTTIq0lURThui5rZCEODg5w7949HB8fjxWHI8+fDLcsy8wxoN4TupE8z2OeOyV5ZxUj
      dF0XjuOg2+0yIzPKQ9M07bWUtHLGI8tyxGh7nhcx1OTBEzdu3MDh4WGkRyCJuKNJkAEZJVZJ
      lXRUpDKrxz8qfO667vUOAYVvfCojazab6PV6zHLG33zYCofLPX3fx+HhIYvtkwGhpqZarYZe
      r8c9tjMyTU019YoAr5p9bNuOfPFp4X/nnXfGvpYsyxHDEd5JOI7DdhxkeOIJ6Xw+P/Sa487f
      dV3UarWharWkogES+uJcLSj+T/d7Op2OfObr6+uRxZrWnnGMih7Eq+DC0C6RXjtJGRR4Vawy
      K47jXG8DEE7MUvzWdV10u13UajV0u93IFl2SpEiMmSDJWFpswq9pmiYcx2FbL87ZkCRp4i6K
      5EAIz/OYJkyYFy9eYHl5eeznEq/CiYdwws1ctNMII8sycrkc04KJFwvECd/MFDaybZs5JL7v
      w7Is9Pt9tNvtU3l0nOmhTvJZuvrz+TyTtWg2m0yaQtM0rK+vD4X0PM9Do9EY+Xq07oTxfR+9
      Xo81tjqOwyRo4oKJ9P0eFWI67S7S87zrHQIKXxCKn4WtrCiKLElsmuaQ6FwQBNjf30ez2UQ6
      nWZNSOHf0/a/3++j0WhAFEUeBjojpAo7Kj/jui4Mw2AlvvQ5x5vKut0uOp0O3nnnHbz//vsj
      jxfetWmaNlSG2Gg0mFR1s9lk8wgIirm2Wi3Yts0q0+i1dV0fKm+kZi9FUeC6LtO9is9PuA4l
      kdeVubk5puxbKBTw0UcfTVW+vbe3hyAIsLCwAFmW8eLFCwAnzkBS/0a73R4bJgwXAQRBwBRO
      KX+wtLTEdoIkiuc4DnN4yClpNBrnXjp8LQ0ALdwUc6MkX9wzoy5N0zSHtIFIx34wGIy8qOS9
      0b9pkAXn7JTL5Yg4WNj4+r6PQqGAarXKHk+qseGfASc367vvvoutra2RUtE0QGNUoo5ivJSY
      s217yDOnslVK1tE50XlSfLbVakW0a8ILA5eyvhwymQwymUxEmXYWvR4yEpSHAsAG28QhJdNR
      yLIMTdNYRWG73R5ySKgXptFosGOTDI6maew7dBFy6NcuBBQEAY6Pj1kzlmEYKJfLMAxjaCtN
      06XK5fJQ/I20xiVJGlLII8JNZmREeBjofKCJYUT82qdSqcgN57ouk40OQ9voT3/60yNDKeE4
      66iEcafTgSRJyOVyI4UEc7lcZPtPISPqBVAUZepBR5yLQdM0rKysRBZ/WjNmbd4MV+D4vp+Y
      D9rb2xubF6TvA4Wl44+lUCCdZ/z4Fz3o5loZAN/38eTJEyb8Rt2USbWwQRCgVColfmgAppIW
      pioiANjY2MDKygqP154j44aF0KhIIpvNsjF/cZ4/f45sNovFxcWRx+r3+3AcZ+SwDMdx2GSz
      pMdQHXh8q099AFSRxiWrXy/UiU05PUrKT1KnHQfpQCUxLhxMlWSNRmPk90JRFOachivSLotr
      EwIKggAHBweRZAvVwsZj98BkUTgSeGq322PL9FKpFDY3N9moQs75Ma4CIvw5FwoFbGxsAEg2
      3J7nod1uY3FxEQcHB4mvR927k86n1WpBlmXk8/lI/X+r1Zro3dOO8qJm0HIm02q1kM/nsb+/
      D9u2x37HpmV1dRXdbheKogw5IOO8fwozx49PcX/SvaJ80qRZv6fFcZyhnQRFTK6NAeh0Ouzm
      Jt0VahQKjxMkdF0fWf8KgFV0jMqgU4KGvFS++J8/JAyYdBPRzzKZDFZWVnB0dATDMNisiHi1
      Ti6XQxAEWFpaGmkEpsV1XdTr9ciwchpgpGkaDMNAt9sdOu9ut/tWzoW+SjiOg62trXN7PdLU
      Pzg4YN3sYSZpAyUZH1I/DivCBkFwqlLOabAsayj0ORgMTmS4L+SIFwBJM1AyjhblUTdcUk4g
      zqg2appOVi6X+Q19wVCnrGmaEa8/CAIsLy+jXC6zxZaa88gTC3vajx8/xtraGlZWVs5sAABE
      kr20C0ilUsjn82xyXRJvk77P24BlWdjf3wdwsgbFK4Hy+fxQYcI40uk0FhYWALzqSbFtG51O
      Z6bXOStU3HLlcwCu6+L4+JhtlShxOOoG1DQN5XJ5qmScqqoshhdOEhuGgaWlJS77cAksLCyg
      VCoNeSiqqmJ+fh5HR0eRygdqYY+HWai6QpKkC2muCrfnkwgc5+3AMAzkcjmmCxZm2iQtDb2Z
      m5sbqkZst9tMeoZ0pC4rF3CldwCWZWF7exu2bTPLGwQBstksK/mkUA1dVJoxPA3UZEGDy4ET
      ze+4RDHn4hi1C6MKiEkLbTj/c3BwgJs3b+Ldd9/FD3/4w3M/18FgMFLLiPPmQnphVFhCTNIa
      IwRBwNraWqTDHXglb97v91mjYalUYnkL3/eHZimcN1dyB+C6LqrVKhvATAJd1HIdrtEWBAG5
      XI7NjT1NGZ6maaymmy/+lw95RvFw2zReUPiz6nQ6qFQqyGazWFpaOncvyrIsLgXylkHhSVmW
      sb6+zuZB06TCaaBksCiKcBwHh4eHaDQabHKeZVmoVqusD4CconBPyUVxpXYAQRCgVqvh+fPn
      zMvKZDIjk7lkNTudDp4/f45yuTy2FDDpWORlkugYX/xfD4IgYGFhAfv7+yy8Q3N0Z6mqaTab
      KJfL+MxnPoNWq4X333//wmupOW8u2WwW+Xw+shP1PI/NpZiWubk59Hq9iHhhpVJBJpNhc89J
      CgI42W1ehrNxZQyA7/s4Pj7G7u4ugiCAaZpIpVKJ5Z2knieKImvOIoG3aWm32+j1eshms6xm
      mCd8Xy/UtU1jNyncFx++Q6W/4ZuSbqB+v48PP/wQsizj5s2b+NKXvoTHjx/j8PCQ1+hzZoYc
      UVEUYVkWarXazGMrFUWBbdtDxQnx6hwqdLhMroQBCIIAz58/ZyVVNI4taQtPbd7NZpMZgdMM
      Z1FVlXUQc64OmUwmUpobvtlIvptE/+JqsGFc18WTJ09QKpVYXmBrawsPHjy4+DfBeWMgR8Pz
      PBwcHJzKiXAc51wq0y6CK2EADg8PI4t/LpcbqbjYarUwGAxQKBSGEoSUVImrRibBJR2uJrIs
      I5VKMR2n8GdsGAY6nU6kKiipCTBMtVrF4eEhPM/DT/3UT2Fubg7f+c53Ljy2ynkzoOasFy9e
      vJE7yNeeBA6CgNW/khbLOLld2v7HhzYQtVqNl+hdcwqFAtLpdET/nJqx4kySZu73+2i1Wmg0
      GvjWt76FdDqNz3/+83j33Xcv7Pw5bw6WZeHo6OiNVW29VANAinjHx8eo1+toNpvodDro9Xps
      +Makeb65XA7z8/MjZ6zqus5VF685oiiyIfGUByqVSkOf66Q2f5J2oLiqZVn47ne/C9/3sbGx
      gVwud6Hvg/NmUKvV3tjS30sJAVGbc61Wi8xJLRQKrARznGwDdX/SQO9xW/54o0X4+OMqijhX
      k6OjIwBgzTJhBEGA53kwDGOkymc8jNTv97G3t4dSqcST/py3ngs3AJ7nYW9vj93IBA1tB8AG
      uRMkwkVqer7vQ5KkqWr8kxLHnU4HzWYTpmlyA3DN8DwPc3NzTLM/yQhYlsUW87AUA2m3hFvs
      bdtm36N4dRGH87ZxoQbA8zw8efIkMsnJNE1WrhkewE1/z8/Ps0Ev6XQahUJhaFTjrFC3L5d2
      uH5sbGww+Ydx9fwk1RCGSobjvQQ0O/pN3dZzLgfqH7rOBQUXZgBIvlmSJJTLZQCv2v6TFvNU
      KsWkHlzXRblcZlr8Z+3oDGtuc64X9F2hEtBRjWGjFvN4joCabeLjQTmTofvwOi9458lZHdOr
      wLkZAJpjqaoqi7m7rgtZltkXxzTNiBdHJXxh8SNFUbCwsHAhgl6c6wuFgCZBEs7hG5NuVFVV
      kc1m2XQnWZb5LmAExWIRpVIJoiii3+9DlmUYhgHf9/Hs2TPeXY1XO4DrzLmdfRAEODw8xGAw
      wMuXLyONWvT78MVKpVKsFl+WZXQ6HdYApOv6tbesnPNFEISJTXuCIKBQKAB45fmTg6FpGpu4
      RHLOo6bFccDkCURRZH01nudBFEUsLy+/EfenJElQVZWVHM+K67rXPqd4bjsA+mKEB32HIY8+
      m83CNE2oqoq9vT0ArxJznufh6OgI5XIZ7Xab36AchiRJUBSFlQwnEQQB6vU6q/wJ7zCBV7r+
      7XYbvu8jm82yfBMnSqfTwdbWFjRNg6ZpaDabTKrjTbgvTdNk4m7AyXdjf38/MpNiEo7jXPvQ
      8rkZABrOTfHB+E1Kwzy63S5WVlYAIDJlyTRNNrj55cuXvESPM0Q2m4WmaUxCNwkS9KMh7aZp
      Mm+WSkU3NjYQBAGbLc1Jhq4ZXTe6f9+EjthSqRTpOaKdDjcAU0KDMajszrZt5nnFSzppoU+l
      UhG1zmKxyD4EUuWk55LwUnwEG+fthXSfKC6dhCRJmJubQ6fTQbfbZWMkadyeKIpYX1/Hzs4O
      n937FhMuDrAsC8fHxzM3kHqed+1zlTMZgPD0ml6vN3QDUb0+efWWZcE0TRaXje8KwhfPtm1I
      koSFhQVIkoRqtYper4dMJnPtrSznfBknE+26LmsaJB33sAG4ffs2JEnC8+fPL/u0OVeIXq+H
      XC7HFv9wqfq0eJ73duUABoPByC1SEAQwDIM1dVGibdpSKXquKIrodrus6uC6Z9k558vLly+x
      uLiIUqnEmgtVVR2axbu8vMwq0Whi3P3797G2tobvf//7vPrnLadWq8HzvDON90wyAJqmIZ/P
      o16vX4v50FMbAPL+x0FT7qn0c3FxceqLQDX/wKtOYF6rzYlDQzh0XWfS0YZhQJZl9Ho9ljsi
      bSngZGd6584drK2t4U//9E/Z+E/O2w3tCk8LlbkT4WqiVCoFwzDYGNGrylQGwPd9vHz5MuI1
      iaIIVVWZh59OpyMNItTwdRrZZcMwuE4/J5FsNsv+ncvloCgK2ynmcrmhRkPbtvHs2TNYlgVF
      Ubjnzzk3wjsAURQj42TJEZFl+fobAGrFJxRFweLiYmJox3EcHB0dIZ1OTxRu43DOgiiKEX2o
      pFyRqqpIpVJotVozj5fkcCYR71QfDAaRSMlV7poWBGG0AQg30gAnGu3tdhuqqiKTyYxc2Cn+
      X6lUoGnaSOlmDucyIH0pqirjHayci8B1XdTrdVbufh24ffv2sAFwXRe2bbP4GMkr0yjGSciy
      jKWlJdYlxxd/zkXQ6/VgWdZUZcKKomBtbQ2iKKLVap2q4uOqomkav8+uAEEQXIukL7G6uopa
      rTZsACzLwuHhIavpb7VasG2bDV6fBsoPcDgXBen627YNwzCgaRorD+33+0OCb0dHR/A8Dzdv
      3sSDBw+u1c06CpK3GCWwyHk7MU0ThmFEZNDDFAoFCIKAarU6bADC2imWZaHb7WIwGFz7hgfO
      mwV5XHt7e8xZSaVSSKVSqFQqWFtbizx+eXkZu7u7+PDDD5nq7DTicleZcNKRw6HS+eXlZYii
      yIZvhTEMA3Nzc3j06NHJc+Ivous6lpaWIl29/EvGuWqEE20UcyWZAqpKCzMYDFjfwJsSAqKm
      t6ucaOQkQ7kpirAAZ08Yr62tsXJ6GpJElUqqqqLb7eLmzZt4+PAhe05iEpiar/jCz7mqjGsQ
      LJVKQ2XE5B1ZljX2RiOHZ5abUVGU17KbaLfbsCwLjuOwJkpuDC6X0yZ8RVFEqVRCuVyG7/sI
      ggCNRgOHh4enfk2aekhRnNu3b0eco5WVFWxvb0e+I0N30XVvbea8HSwsLEQcFEVRWFNONpsd
      cl5kWca9e/cmDoKXZXmmRTSfz6NYLLKhR5cNGZ7Dw0PcuXPntZzD24zv+2OdkVFOtCzLzNmQ
      JAmyLKNcLuPGjRtT51rj0PB63/fZvUDOTDabxf7+PtttsPM41ZE4nNcMyRSTUmXYAx81O3ow
      GERE4ZIW+lk8ecMwWLHD65YsEQSBGb7rUob4JkAhlohX/UlTIiXpB4MBdnd3I71Uo3qk0uk0
      JElCu92e+XMk573T6SAIAiazLwgCDg8PEzufudAO51pCMdRZwpTHx8fMu1IU5UyLtmEYSKVS
      VyZM2u12maKuqqqsIkoURSiKAlVVr8y5vknE9YAEQcDm5iYWFxdRLpehKMqQCjLwStIkCZph
      PisrKyvo9/toNBrM4JimiXq9PlL+hO8AONeWhYUFNoEuzCjP6caNGxgMBnj69OlQInhaz5l6
      YkZNrZNlGYqiMAmUer0+7duZCsptxOUFHMfB7u4uPv3pT8PzPFQqlaHzGwwGsCzrSksTXDfi
      BoCGEi0sLEQeZ5om0uk0252OG6ojCAJyuVxiGee4HFVc4Tafz2N/f3+s9hU3AJxrja7rkXCO
      KIo4ODjAzZs3ExdoVVVx584dPHr0CO12G6ZpwrbtqSUiqHyUKivCZLNZZhg8z5sonjgrVOZK
      sutx/fpWq4Uf/ehHSKVSWFtbQ7/fZ6q8NBNZVVWmuMs5O0mKoJVKBa1WC+vr65Gxtzdu3ABw
      Yogn7T5N08Ta2tpQzJ5wHAedTmdkyPLWrVuo1+sTHRAeAuJca8rlcqRD3fd9VCqVsaMeRVHE
      xsYGSqUSPM+buXKm3+8jCIIh8UOK64YbKM8Tej1KGo47P9u2kc1mUSqVhhaoVCo1Mk/CmY2w
      IqggCLhx4wZWV1exsLAATdPYrjJcWTntd44qepL+qKo6chexsbGBRqMx1e6TGwDOtUYQBJTL
      5aEFcdKsX03TsLGxwaQUZs0HNJtNdDqdIXVRz/PQaDQupNPYdV00m004jgNN04m3w3kAACAA
      SURBVJDJZBLPWxRFNJtNHB4esql64fCWIAhIpVK8ufMcCI+FDIIAkiQhn89HOrSDIECv18Pu
      7i4ajQaePn2K3d1d9Ho9DAaDkcZAluWxVZlJO9xbt26h0WhMLXnODQDn2lMsFoeSbNMsbuSx
      3b17F6urqzMlSYMgQL/fHzIAg8HgQmUmbNtGvV5HEAQwTTOx54GEyaiLn8oA4zkOqjjhnJ74
      TICw2CCFFWl3uLy8jIODAzZbxbbtscUIvu/PpF67sbExVdgnDDcAnDeC+fn5SGUFlcFNQtd1
      KIrCbsxZsW2blaICr8pTLxJqGqpWqxAEITGpSwPcO50OqtVqJBxByLIcmcvNmZ14H0C324Xv
      +3BdF91uF0EQwPM8CIIAURQjC/qkGcTheepJhH+uKAoEQZi56IAbAM4bgSRJuHPnDvOGa7Ua
      Dg8Pp3purVZjeYRZQ0GWZQ0NSrqMngDaZZDq7ij6/T6azSYODg4wNzc39HtRFFEoFBKb5ziT
      iRuAdruNp0+fYnt7m4UhyRGhpq/wY8f1nQiCAE3TUKlU0Gg00Ov1YNs2+xM2/PGZLdPCTT/n
      jUFVVWxubuLBgwfwfR+FQmGq583Pz7OQThAEEY9+GjzPY7pZnufN/PzT4rouGo3GxISibdvM
      A6UJfuHFnowWbyCbnaROYFqYB4MBtre3kc1m2e5UVVX2e9/3sbOzg42NjcRhRgDYuFNa9M8b
      vgPgvFEYhoF3330Xsixja2sL+/v7E59DW+1bt26x+u1Z9LAsy0oUp7sMpq1gIs2g5eVlLCws
      DC04F7G4vA1MkoLo9/ssJJjkXCT1sYQhzaCLghsAzhuHruuYn59n40mnrcc3TRPlchm6rmN9
      fZ3JK0xDv9/HYDBI7A+4Kuzu7uLx48c4PDyMJI49z+PNYackCIKxBoCqtYBXEg1x2u02yxck
      QQqfFwE3AJw3ksXFRZRKJdYhOy2iKOLevXtMiyVJP2UU4Tr9q0iv10Ov10O73Yau62zuB4WH
      OOdPOLcyKkHr+z6ePn060ghf5PeJf+qcNxJBEHDz5k0sLCww73xaFEVBqVSa2ZO3bZtVfVxl
      +v0+Hj9+jCAIWDNRoVC4sjuX60xcsXYczWYTQRAMfYdkWb6wz4YbAM4biyiKWFxcRCaTmXjz
      xWm32xOlo+NQh+d1aLCyLAsHBwd4/PgxFhYWmIIl3wmcL8fHxyy0k8/nx5bcUlmo4zjwPI/t
      PgVBiEy4owYxMgpnGdrFP23OG42qqrh79+7MN0ipVEI+n2dhkmmp1WqRZqCrTr/fx4sXL5BO
      p6FpGpO4zufz18KQXXXCw+JN08Tc3BwymUxiXN+2bTx79gwA2N9kPDRNY89xXRee50HTNBSL
      RWSz2ZkdHIKXgXI4CRiGAV3XYZrmTGWd13EiV71ex9raGhOZ6/f7EASBKZtOaljijKfZbGJu
      bg6CIKBYLKJYLMLzPHS7XTQajUiRgmVZGAwGsG0bh4eHrAiBxpz2ej0mL2HbNkzThKIop59M
      di7vkMN5QyE1zfOCSk6vGh988AEePHgQSVpKkoRUKnXqCVWcE46OjtBoNFhHsOd5kGUZuVwu
      cZIcxf9JDK7X68GyLDZkhjiP7xE3ABzOCARBQD6fRxAEp95ixxk3COR1Y5omjo6OWGMccV7v
      /U1lUjc2AOzv7+Px48fM4x/lVLiuy3pXXNdFEATY399ng37o+yPL8rkounIDwOGMYXV1Fffu
      3Ts3r51u3GKxeGUXVsdxIsngsyQZ3wbignBJBEEA13Wxt7eHg4MDNo+BpJ3D0A6g2+3iyZMn
      LDcDnHStr6yswPd9NBqNM587NwAczhgEQYBpmucS2xcEgU0LO+tIyoug1+vB933UajU2zhA4
      CTVcZYP1uglLQk+D7/ss7m+aJm7evJn4OIrzh8NysizDMAyIogjHcdBoNM7UxX21voEczhVE
      FMVz6cYkXXgKr1w1r9p1XbRaLTQaDRwdHaFYLDIV0V6vN1a47G1mmh1AnPCi3e12x34Xwg1i
      NJGOPgvbts8kP84NAIczAcuycPPmzZn7ApIgLxsAcrnclWu+ogWl0+ng4OAAuq7DMAy++I9h
      1h0A8KrahwYIjaviiZfjSpLEDIYgCGcyAtwAcDghaJyj4zjo9Xp4/vw5PvzwQ3zwwQdYXl7G
      ysoKu9lP48HTtr7VaqHZbF7o8JizQHH/4+NjHv6ZwGkMQBAEOD4+hiiKWFtbm6nSKpxApr6N
      08INAIcTw7IsVKtV/PjHP2YzBTzPw6NHj6BpGu7fv4/NzU0Ui8WhaVzT0G630e/3L002+jTQ
      TqXVauHFixeRTlROlNMYAABoNBqwLAuyLGN1dXVkVU/Y0SCPn3YMvV4Pnued2ghwA8DhhBAE
      AfPz85ifnx/aenueh+3tbXz00Ud4+vQpMpnMGxsaCS86x8fHcF0Xi4uLpzJ4bzqe552qSox2
      AcBJnml9fT3RkFB+gbqKqYKIOMvujBsADicBURSxubmZeGM7jsOGeZxnk9hVwvd9VCoVNuxm
      d3cXpmlic3PzyuUtXjc0DOg0WJbFvHlRFBOntpGT4fs+tra20Gq1Ir8/SzUZNwAczghM08T9
      +/ffqpm5oxYyx3FQqVSwu7s7smyRMzuDwSASCsxms0MLOiWJw8Yi/hpcCoLDOWcEQYCu61ha
      Wjr1a8wSGqCmoNfRH0AD4svlMorFYmI8utvtwrIsJmnAOeEsOwDSXKLXqdfrQz0n3W4XnU4H
      e3t7Q79TFAX5fP7Ux397XBsO55TQ2D/ScZkFWiyn8dBIhbPZbF56gtj3fciyzM41SdHU8zw2
      8ziVSnGRuBCnXYCDIMDOzg6y2Sx6vd5QfJ8gddDw8VKpFHRdP9VxCW4AOJwJzM/Po1gsAgCe
      PHkycnKTqqqsSoMoFotwHGfiWEpFUViz2evyrl3XhaIocF13bOdzrVZDqVTiBuCcsG2bJYOn
      JQgCNmLyLJpAPATE4UxAlmXoug5d1/HOO++M9Lo8z0Mmk4mEcHK5HG7fvs3mwo5CURRWzXFW
      r+40+L6Per2OTqcD27bPRWjsbeK0MfizQkn608INAIczA4qi4P79+4mqniT1HJ6stbOzw+YL
      A6O9e8uyYFkW88JfR+I5CAJ0u130+/2x3v1gMODDYq4I8VChpmkol8u4efPmVPIl3ABwODMi
      SRJWV1chSVIkyUuLPCXmRFFEEASoVCpYX1+HrutsyEoc3/fR7/fR7XZh2/aVnitcKBSGShHf
      ds6SCD4rzWaT6QndunULi4uLSKfTWF1dndgjwA0Ah3MKstks3nvvPdYYpes60wqigR/kxTca
      DTx9+hRLS0twHCei7hjGdV1mNK5yCKbb7Z6pMupN5HUaANu2Wa9AWFpEURTMzc2NNQI8Cczh
      nAIq2TRNE67rwrIs+L4fKesLN4mRttDi4iIWFxextLSESqWCarUaafQJggBBEFzpHQDtVAzD
      GJkQf9t4nQYAOJlhfe/ePTiOg2q1ikqlgnw+z0p6nz17ligbzQ0Ah3MG1tfX4fs+njx5wsIi
      STea67pMV6jb7WJ5eRmrq6tYWFjAwcEBjo6OAIBpw1x1iYnt7W3cu3cPT548ufLnehmQHMTr
      MtyGYcCyLDY7OGyYj4+PR84M4AaAwzkDgiBAkiTcvXsX29vbqNVqE5/Tbrfx8OFDlEolbGxs
      IJ/Po1qtst/TcHZguLpk2p4Ceuw0hBPUSZ7sqOPt7+/jnXfewaNHj2aWxBjnMVPPxVUbmDMO
      13Wh6/pM12Gaz3Laz5vKj5vNJhYXFyNyHYVCAfV6PfF53ABwOOeAIAjY2NhAKpXCixcvppog
      1mw20Wq1sLm5OXYq1FUZIJN0HoIgYGVlhZUjzmKg4oRfV5Ik3Lp1a+Q5THqNyy7LpNzNeRvn
      UcSPI8syK+OlMuLj42M4jjN2V8INAIdzToiiiIWFBZimiX6/D0VR8Pz585EhEtd18ejRI7bY
      tdttfPTRR8x40FD6aRcLajhLpVKQZZl50mFv2/M8+L4Py7JYbwKFD+KD4AVBGJpXMCnWPW7g
      Ob0nep1JnMWYnNZoqqqKXC43sTFLkiSYpsnkmAlZlqFpWqSjV9d1DAYDluPRdR2+77Oh70nn
      S/9fWVlhQ+In0e12IUkSRFHE0dERCyuOgxsADuccEQQB2WwW2WwWtVptqvg4qYv2+32WYAVe
      9RVMu4i1Wi30+33U63WUy2U21CW8aDebTfi+j0wmw7qTBUFAu93GYDCAoijwPA+maUIQhERJ
      inGLq2VZaDabU53vJERRRCaTSXy9i4q367oOSZIiIbk4NNu51+sxIxmOsRcKBXadZVlmzXUE
      9ZAkyW3EyWazTINpGhRFgeM42NjYwOLiInZ2dtjEsCAIIMsyJEmC67on1WpTvSqHw5mZQqGA
      e/fuYX9/f2zd/Pr6Op4/f44HDx5E9HioGojyDJNIp9PwPI95m7IsIwiCSE6BDEq80Sy8mE/j
      dVOpaxxN0yCK4lQhsEmEh6fHiRuAs+wWwlDegYxv3IArioJcLodarYZ0Oo1Wq4VcLhdR5Oz1
      eigUCmzhju+IbNueWiTQsizouj61AXAcB3/8x3+M1dVVlEolfOlLX0IQBHj27Bk8z8P6+jpk
      WYbrunj69Ck3ABzORSEIAjKZDD772c9CEAQ8f/4cL168GFpUjo6OkEql2KIaDgsMBgOIosgW
      piSvm8TqALBFMRyPDsenLcti/w/PlQ0bHDJC494XLfLxRC0pqE7j3U7DKEMSD01lMhl0Op1T
      Gx5N05BKpdjCTLunOGED22g04Ps+bNuGYRjsPdMCn0qlEmPwJKo37XklJXDHhdKazSbbNYmi
      iFu3buGdd97BYDBgCftsNovbt29zA8DhXDTdbhetVguFQgG3bt3C0dERWq0W6x2gzuGbN2+i
      Wq0OleyR7MKoRTm8uNPCUqvVRlbzhD338EJqWRb6/T6KxeJEPSJRFNHtdiGK4tCUsFQqxfIM
      l8EsYbJxr0Gfh6ZpIxdpGpNJ/waSPfperxcxgmTEaTeQyWTQ7XbHGixBEBKNLHCiMSXLMiqV
      ytj3RSXKOzs78H2fvR7No+YGgMO5YFzXRaVSwZMnT5BKpVgzWC6XgyRJsG0be3t7KBaL2N3d
      hQBAkU5uen8K7X0Kh8QNx6iQiG3b6HQ6SKfTsG2b/aFww7jjeZ4X2W0kPUcURWSzWUiSNFLe
      +DzxPO/MeQdarDVNS3z/8RCTJEmQZZl14U7K9dDiS8eg0FwYVVXhOA47jqqqI41bv9+fabcT
      DkNRaI0bAA7nEhBFEaqqQpZlpqPfarXgOA5EUWTaP6Ig4Gv3FvAXfnIN98onUhAPaz383Ud1
      fPNpHeMi3EEQzNSQ1ev12HN832cLYFzNNH4M8vxN04RhGPB9P1EcjvTqyUi8DihZO+u1iUMy
      H77vM895VhVOirsDYAY3TjysRXX9mUxmKKQ2qrFrFmzb5gaAw7loKOQS95Jp0ZRlGaok4K98
      6QZ++W458rjFjI4vrRfw24+q+K/+6Q7chDWH4vmzJkLjMg5UNgqcJBOpozSeICb5C0mSmMBd
      EiSX8boMQKlUYmGXaRr0woSvJS3eYS8eGJ2foBxK2OhIkjT0fLretJtwHId9jrTAW5aFUqnE
      usjPG24AOJwLRhAEFAoFpgekaVpkay8IAv69zy4NLf6EKAj41bslbDf6+K33kxeCpFGCs5JO
      p9nxaYGn8FI4Kep5HktMSpIEwzBY2ejrRhRFKIrCyjkBsNLHaROvhmGgWCyiVqshCAL0+304
      jsOG5RCKorCa/7Dh1TQNvu9HDECSx07aUZ7nRYbwhK9jv98/dUd0Op1muZxweTGdu+/73ABw
      OJdBNpuFZVl48eIFq8Jgv1Ml/NvvzU+svPl3P72I//OjY3Sc6EJ/XvLR4YVGEARUq1UsLi7i
      4OCAnRuVlFIV0KhqmUnQkJ1Zp4pR3gQ42Y3Yts0MKjA8g5l6G6Y1ABTmomom2qnJsjxUkpoU
      +6fj0K5HkiSoqjpSNI92VOFdUnwXV61WUS6XWcKXQlvxkBGRTqdZOS59pjQbgIxAoVA4qeaa
      eEU4HM65YJomstksMplMZNF8t2SioE/2xcqGjLvFaMUNLYJnhRZyiumHdxPxBYm6iel5ruuO
      NAKjfu667tCiSN3H46CKJ5LbTqfT7Hmu66LdbsOyLAwGA9RqNTQaDfb4aaDQjyRJyGaz7PV7
      vd7EUFYmk0Eul4sYBc/zJiqmUtf4KKrVKgqFQuQajDNmoiiyTvDw+yKDRscMgoDvADicy0KS
      JNTrdVb2SYtdTpuujFEQBGS16C07GAxOFWPXdR2apkWqZ7rdLgtH5PN5qKoK27ZZySIZCQqz
      OI4TmXsw6pxHEV7EMpkMDMNAvV4fm7ClEkx27T4ph6zX6yMXxXhJ5qxQie0kraNJc5/Hvf6s
      O7hxj4+fHxlN2hFQFVCn0+E7AA7nslBVFaqqMq+QSi+3Ky34UyRv/SDAQeeVpgyAIU9vWqgU
      lKCdBMW46fXr9TpM00Q+n2c15IIgsBAD6eGMyj+oqhoJd42i2+1OLZ1B50fn3G63xy6Is5ai
      khGMH4+auyZB3jxJM497HL3erGqq40hyCHq9HiqVSuQ4QRBwA8DhXBaSJGF+fh6e56HdbqPR
      aKDZbOJPdw7xuDp5kXpU62O7cRLe6HQ6cByHCYDNStzrpNp9ChNQPbogCDg+PsZgMEAul2OG
      IZVKoVgssnr0UXX4giDAMIzEc6T4eiqVYsZxGsIJXjKk54lt2xEvmnIsnudNlbMgY0gd0ePm
      J08a2TiJxKKBhO7sUTsXbgA4nEuEFoPwgmh7Pv6bf/wQrj96F+B4Pv7a9/fg+AFTl6zVaqxC
      Jc6sQ+Vp8c/lckMLtiAI6PV6LPRDC4kkSchkMigWi8zLd10XzWYTnU4nsuAk7QKy2SxyuRzS
      6TRyuRwymQxTKB3HJInj82BSBc846NzIOIafTwllOkbYcI4zFPGFXlEUyLKMXC439LxpDSnA
      DQCHc6lQSWLcS/v/dur4j//Rx2jbw6GAlu3iP//WDr61+0pQblxs3TAMFAqFmUJD3W6XJQZJ
      KTIsVywIAlMZDROWF+j1eiwJS41mBC2oNKZwVNlovKuY5JXj7yUuP3HexKWxzwMSl4vPU6AF
      W1XVkZ8rifsRlHsJa0cRvV4P9Xod9XodjUYDjUZjZCKaJ4E5nEsknU4nlgVato3/7U+f4v95
      dIB//Sdu4CdXCngnr+G3H9fxu1s1HPZeeaTjBo/oug5d15lQ2bQ4jsPyAmFVy3K5HJnQdXR0
      hIWFBdRqtcgQe+q2DecQ2u02TNNkEtPAKwmF8M/CiKKIfD4Pz/PQ7XaRz+dZaaXruizsdVGz
      iM/bsJBWUvgzi8sykHGctNMIP4/ef1K8fxaxOb4D4HAumXw+P/J3L1oW/pf3X+I/+YOn+KMX
      TfytD15GFn9gtMYPyTO02+1TSx+EXztpIIzv+3j58iVKpRIWFxcBvNIHyuVyKJfLLHxkWRYa
      jQZc12XllI1Gg0knU68BlViGE9uUdK3X66xipdfrwTCMmUIcs9Lv94fyEbPkJ+KYpglRFJnQ
      Xrh3IK7oGU7uA4jU8Z+H4B29Thi+A+BwLhnP86Cq6shGnk6nA9cZQJbWhmQYBoMBWq1Wond/
      lnLHpMUlSbAMOFmYDg4OUCqVWDNYGNM0oWkaExyjJGShUGBlq71ej+UbSIFUEASmkhpeCMPv
      qdlsshzIRUE7FGLahVeSpKFrRmE1+lnYi6edTdLOQBAEFItFACd9AKS/dBZxPUmSUCgUUKvV
      2PnwHQCHc8lQJ+coThYFQBCjC0+/34+EdiiheJoYdTzOPopRzVkUEqKwDBEEAUsia5rGKnao
      UUvTNJimCdu2WYUMlXNSGeo4PSMae3lZBEGAVqs1lcGJh+ZSqdTYYT7j3itdX9oBHBwcYHV1
      9RTv4BWe56FSqUQMFN8BcDiXzPz8PGvFl2UZjx8/hiAIyMk+/szNIkopDQ1fgRIzAPEYMWn0
      kIRxfJEivZd4PFhRFNZZ2uv18PLlSywsLODZs2dTv4ewTn3YgPR6PVbbTsaAoHxBOB9Af5rN
      Jubn56GqKprN5rmXds6C67ps19Hv90fW6NP7pt/Hd0vkrY+r7hlHp9Nh4TLKgZzXtDWCGwAO
      5xIhT/jhw4dMw2ZtZRn/weeX8W/eSyOjSqxmu9538f8+b+APdl5NdwpDC8+oeH/SQkGlm+R5
      6rqOWq02Mvk5qpKIhqYoihLZgZDXS/X54di5KIosBwB8Ikf8SSljpVKBZVkwDAOapg0ZgPMa
      +TgNg8Fgql0GXX9ZlsfKQ09jzHRdh+u6Q41aruuyHRPpHp1HApzkIrgB4HAuGVrMqILjl9dE
      /IefyQ2VBxZNBf/Tz9/Gv/P3H+HbT2sR/f1RqKrKZBVoMleY+Mxh3/dRKpWQzWYj3qUgCExm
      IQmK7dNj4++N6tTpXMMCboRlWVBVFbquQ1VVFhJJCjnRcPTz7JgNQ7sTWZYxPz8/Ux9FuBIq
      TPj/Sf+OJ3wVRWFNaDQMxrZt9rnk8/nE8ZCjIOOb9H2h8l1uADicSyZ846/kdPyn/+KdkYlG
      QxHxl7+0hp/bqsAeDBJvZlEUsbKywrz4arWKZrOJ4+PjiPcpiiLK5TKTIA5X3XQ6Hdy9exfb
      29twHCexwSiMaZpjQxHh4fOCIKDT6URGVhI0T9c0TdTrdTZsJU6r1TrTDoDKTkcltfP5PDNA
      lUoFu7u7SKfT8H2fedxUyQS8KrWM9zuEoVxP+FrHjSX9TbLa4zqN0+n0TMlvUm4dxa1bt7gB
      4HAum/CC8Wc3yzCU8bUY98omPnd7DQc9D41GA4IgwDTNiFb//v4+dnd3R74GVZVQrqDb7SKV
      SkUmZjUaDdy5cwfPnj2bWPao6zrrYs3n82i1WkzhM5wDIB19z/NQLBZhWVYkvEJJZAo1UZyb
      qoOSvOVZIfG9IAgSReNIz0gURWQyGeYd07Wix3e7XXYNqeKHBPRGMe2Ohc5hlLDf3NwcmyI3
      LfGQUphCoYBWq8UNAIdz2YTj6vPp5Bm0kccLgN9r4tmzE33+Wq2Gly9fTtXsYxgGHMdhyVYa
      ai5JEtrtNksUK4rCunOnSVpSvF7Xddi2jfn5eWxvbw/1EVBjmaqqbGHvdDrsXFKpFPs3dS87
      jsMqic6j4oc6r0c10JHXTUJ99HmQgSsUCmg2m3BdF5ZlQdM09Ho9qKqKXC4387SxJMLGLon5
      +Xl89NFHp3ptmtzW7/UgiwJEAVDkk1wQNwAcziXj+z7rA3je6I+MexOuH6Bq+dA0DVtbWzMd
      Kxy+AF5N+ioUCpEZt5QDIA98mtctFArMo9Y0jclHhwlLS2iaBkVR2MJJEsXASZw6LG8ARPMV
      p0XTNKZDNCoERFCPBXUfU44kPACH5KiBk2s5q+bSKJLeYyqVguM4GAwG2N/fx61bt7CzszOz
      DlIQBPjirTn8xS8s4gurWRiKhCeVLv7+dpcbAA7ndUByB//kaQ21noNSanTI5Y9ftHHYdZj0
      8zRlgBT7zWazkbh1u91miyrFvm3bhiAIyOfzaDQaU50/aQPRv5vNJnt+OIRC50rhl3APBC3+
      tEOIG0GSko4nf8PDayZhGAZ7XVEUp5oMFg5bUQ6AOqzDjBrufl6E8wuUH9nc3MT29vZMyfCv
      vbeA//Vfexe68iof8OmlLN5bzPJGMA7nsgkn/2o9B//F730Ex0tezKo9B//tP91l8fRJix5V
      75RKJRSLRabjQ41FmUxmaP4szY1Nmv876VhkTI6Pj6GqKvPa2+12pOMUOMkbFIvFocQkndso
      cbhisRjJSRQKBZTL5ankGfr9PitJpd3PNFiWxeLt3W73UpvPiPiugPoKZpGEWMnp+Btf+3Rk
      8ScEgfcBcDiXDo1Q7HQ68H0ff+fDI3SdH+KvfPUebhYMtqg2+h7+wjce4aPDNprN5tjQjCzL
      MAwDsixDVdVI+IIIl3/GF0OSGRBFkWn7zLLQ5HI5HBwcYGVlBc+ePUusViEDER6qIssyGzZD
      55ikX18sFtmCTDN+s9nsxPBQOO4viiKTVxiFLMsXJjR3HpAjMC3/6meXUTRHG0puADicS4Tq
      /0knnhKu3/jxS/zOhwe4v5DGL396GTudAJ9byGCrbiVOqEqCpIX7/T7a7TbS6TRM0xx6DHCS
      4Mxms1BVleUkwuMW6dymNQKk47O8vMyqlDzPYyESknUGoknwTCaDw8PDiDBa0qI+qkLGNE22
      gyEFUrpW8T6FcSqq9DjqoXhT+NTC+PkK3ABwOJcM6bOHm8FM00S/38ePXraxlK1hvlSA759U
      AIVn0ZLGTlz0zXVdtFotNr1qVCUPNYq12ye7CkEQmMa/7/twXReKorCE8CSdIfJIKbHbaDSw
      trbGRjXSjF8yRPReSMeIchHjDA2J4CUt3p7nRZQys9ksarXaxMWemtzosZQPOa2K6lWl74zP
      d/AcAIfzGhBFEaqqsgU2nPBrWi7S6olvJn7i1ZdKJeRyORQKBfa88PMJklfIZrND3j9wsphq
      msYkqYMgQKlUYrLLrVaLLarTQHXytIuwbRt7e3vMAFESOggCNBoNNg8gn8+z9zDNLmNU+Cs+
      fIakJSadf1xe2TTNyC7lTeDefBqllDrWEPIdAIdzyaiqyhZnx3GY6BfRdXwUdBk+Tjy0sCY8
      QWJyFOt3XRe2bbNEMUkI0M1P2j2tVguKorAwSbFYRK/Xg23bLPbtOM7U4Z/BYIBUKsUay0j+
      wbZtpFIpGIaBxcVFdq7UQUsDyjc3N4cUKuOENfSToOuXy+XYnGHXdcd21YZr93VdZyGr8P/p
      Gl2k9PR5c6Ng4Fc+s4w75RR2aj381d9/jBsFE59fS55BwQ0Ah3PJ0ELuui5rxgovMp6sI6WK
      sF0fivRqEe52u2wRlSSJDRuhJi+SVgZeTZoKyzmT3kxYU16SJPR6vUh9DvBOPQAAIABJREFU
      ezghOw4KzRiGAcMwmBKoYRioVCpYXV3FwcEBG7JCIa9MJsM88Hil0CjIyIxiMBjAdV1WGaTr
      +lQD3IGTXVOlUoGu66wHgATz4sZ5FqjklQz0RbGc1fHn7s3jc6s5HLVt/PaPDvDXv92B98mM
      6X/j//hn+L/+rc/jJ5azkc+0ZTncAHA4l014QU7yblu9PnRZRHvgQQ5JQg9iWkAkGOb7PhNW
      o5AKNS/FF/H4YlatVrG2toZisYhHjx6xx4xKhFJsnTx6qmbK5XIATjzrXC4HVVVxfHyMIAhY
      KSbRbrcjIahJzV5xAzmKbrfLDMC0yWvqTqbjUBcyvQYZttOQSqWYIF+lUjlXNdOMJuPPv7eI
      f2GjhMO2hX/08Bh/+5/tYuANH+NZvY8/+ze/g6+9t4Sf3izBVCV8dNjB3/nhC24AOJzLxHEc
      tuglVbVIkgRJViGLAlw/gCa9in1TZygtJFSu6fs+mwaWyWQi9fhhKEQUxvd9PHv2DPfu3WM/
      I2863uVKtfS6rrMh5blcDr1eD47jIJ1OR35HXaxAVM55MBig0WhA0zRmOCZ1Q1NielKoiPoY
      pi3l1DSNdUlTv0CYpG5kMqzxEY5xKHRHCp9nJaVK+MrNDP7i/fcAAN/48CX+0t/7AI4/+bX7
      jo+v/+AFvv6DF5GfcwPA4VwinuexqpmkjlRN0wBJhiIKcPwAaigEpCgKS9iSEiUttPT7cOcr
      8CpMQ/Nok5AkaWiqF4VqwoR7CyjXIEkSU82MSzvQYHfgJGcRnmZGu5n5+XkA4z12qhpKpVJj
      G7JIyTOc+xgHqZXSc0dVDkmSxBLutm0jk8lESksHgwHTDQpDHcxn6RbWZRE/vVnGV+6Uocoi
      Pmr7+Mu/9zE6g9nkIEbBDQCHc4mE9d2TFoZUKgXHDyCLImzPhxraAVBop1QqodvtDkkk0DAW
      Oo4sy0zTZtwiVCwWhwTNkiqINE1jVTLxmbl0HMoDxEc31uv1yOIaHg05DaTVPw3jdgl0TeLG
      koxMeM4BANazoaoq0zsKd0rT80jNMwwZ6VlRJAE/sZzDv/ypRRRNBd/eruKv/v5j1PsO7ty5
      c26LP8ANAIdzqXQ6HXS7XVaVk4QfALII2G4ATRr2jCk2HU+Kep4Hy7KYjk2z2YxU/IyCBo/I
      sswemySbEPfSSe+Hfu44DrrdLks+jxqIoigKC/1QxU7idfhknCUlY8+jRt80zZH5jVFicbqu
      M8NHTXK0G6J+ibN2D4sC8BPLOfzSe4uYT2v453sN/OYf7WC/lSwPfV5wA8DhXBKkH29Z1kjd
      9/Ai6/g+lIT691FhBfK4w9LH0w4zB8DCHP1+H81mc+xQGNpV9Pt9ZgRo1nB47GMSrutiMBiw
      kZgUT48bGFpsx1X/nBW6RmSwwvMHwqJ5ZKxJOrvf75/5vAQAd+ZS+IV3F3B/MYN/vtfEb33v
      GV40k78bCwsLKBaLuH379pmOG4YbAA7nkuh2u5FyyzgkaQCc7AJsb3gH4DjORP15CnNQYjas
      3DmOcLgiCAImF0E9ARTicRyHSTwTFCIhOedx3jo1wdFxgOQcgCAISKfTZ46jh0ka20hDdoDk
      0Jcsy/B9n133s0hUCwJwo2Di5+/N47PLOWxVu/i/Pz7E//Dtp/Cm0DV69OjRzGMhxxljbgA4
      nEti3OIvCEIkhi+LAhwvWgUETDcZKwgCNjGM9HFOAxkBRVGYfETSwi7LMqu7p4qacXiex3YA
      o44LDGv5nAcUugknrMPHJAaDASulpZDaqMfSOY77bAqGgl+4v4Av3Spht97HP/z4EP/zd5/B
      +0TeQ/9EjG/SuadSqakNAGkycQPA4VwBJs3QDcfcW7YLRRJOykFDJZkU/x81Oxd4tUugWPtZ
      m5Am7TpIh0jX9ZnVKuP4vo9ut8uUTc+bTqfDGsRIiiIMSVOTcQrrFcV3LfR42qXE8wAFQ8bP
      3Criy5tluBDwD378Ev/R73wMn9RJZRkiTvIgo0KCYWq1GjY3N6d+r7S7GQc3ABzOJeB5HqrV
      KoBXg0nCCyV5peTtdgYnFUCqGC3pJJ0f27bH3twU26YF7TKIV/6EoQWUFjrXdRN3AI7joNfr
      wfd9ZLNZZvCo/2GaruFZzjdurGhmQrjMk5K+YRnrJAqFAtKajC/eLOCnb2TRaLbw7Wct/I33
      25+IsmlYXFoaep6qqnAcB8+fP2c5hnC5LRkcXdfPPR/CDQCHcwlYlgXTNJFOp5mnH+4OTafT
      ES3+9sCDKglQxFe16rZtTxRPE0WR6fGIogjLsi5Ny4Z0fsLQMHrbtmGaJmvWGgwGifF2ykNY
      lsUWXVVVUS6X2UjGi5zC5XkeDg8PcXR0xMZWVqtVZLNZWJaVeGxVEvHFmwX84qcWkTZ0fO95
      HX/pb78PC/LYnVqYdDqNO3fuQJIk9t49z0MqlUKr1cLLly+xtLSEnZ2dc32/3ABwOJcADVAP
      j0oMV5eQPDSpdbZsF4YiQgiFlcNJYk3TWMVNOGZOg9Wr1erQDNuLho7veR46nQ4r4aTuYSqz
      DJdVxgmHq6jzOJ/Ps3GYNIR91rAWDbwPK4eOgpr1XNeF4zgoFApDg2IEAJ9bzeFr7y0hbyj4
      o2c1/Pd/uAtX0k6u+8CH501fGtrpdPDw4cPEbudUKoW7d+9C1/XE0ZRngRsADucSCMsHUHKx
      VCqh1Wqx8YMUjpBlGW3bQyErY+C8mqk7GAwiOwBqZqJmJdK4p0lj03JeGjVBEKBWqzFZZZpN
      0O12YZomM0akWZREfHfjeR4ajQZT6ARGS0MT5LmHB9xQToGS1ZPGa9LzM5kM+v0+LMuCJACf
      Wcri599dwEbRxA/3m/jN7+5gL1S2SedWKpXg+z6azeZMxirpnLrdLh4+fIj79+/j9u3b+MEP
      fjD1602CGwAO55KI39zUQRvH8zx0Bh4MRYTdtyOGAXhVo04JyHQ6jWq1OrWG/3lBOxIK/aTT
      aXQ6Hbiui2KxCEVR0Gq12MILvKqEoth6LpfDYDBgyVZZlodCJmREKDw0yWB1u91IpzIZJppB
      QE1oJFY3ipNmugbW8wb+/Oc3cG8+jY8P2/i77+9jq9pF0jPpM67X69B1/dwqmHzfx49//GO8
      ++675/J6BDcAHM4lQfFcgmSCw9t+WZZhWRaqXQumnEUbASu/pPAOQeEVEkprtVowDONcVSdH
      QeEYeh9UBdTr9Vh3ryzLKJfLaLfb8DyPed/U/EVGwPM81jswLr4/7fui8Fr8ufV6HdlslnUC
      h0NwcZayGv6VTy3hJ1ayeNG08A8+OsRf//b2VMcHMHEewWkIG7JJ1T3Twg0Ah3NJGIaBZrMZ
      0ewPJ4UBsIX8qNmF7zlIp0ymhU+Lp2EYrFKk1+uxqVvhrtmkMEnYGw3/m5q34vINceK/Cyel
      KeEMvFLuJHVSACzpS0qlVGpJ59lut8+twodKSZPodruR4TFhA1AyVfzSpxfw03cW8Pw4h9/9
      6BC/9b0dJCgsvzYajQZWVla4AeBwrhuGYaBUKgHAkCcf/tswDJiGgsViDkfNE8XMUU1RhUIB
      kiRhY2MDx8fHiVVCNE83LmlMDU6UmM1ms+z3NGA+Sf8nXjo5NzeHarUaCbsMBgPWFEahEAoF
      UTjItm0UCgW02+0h0TQqdT3vih8KVwnCSX9FTpfxM7fL+JnbZViuj28/7+C//oNneLa3f5J8
      VjV4pzwHCm+dVScojGVZcF0XhUJhpo7gUXADwOFcEoIgMM9tXGy4Xq+jlTIh+kUM+j0cHh6y
      Jqv48yjB6Hketre3USqVIg1UpBoa9951XUcul4NlWYlSxplMZkha2vd9NBqNIQMgyzKePn2K
      dDrNZgDIsjy0eNPEMhoGU61W4ThOYhOUZVnMCJw3ogB8eT2NX7x/G47n4/cfV/Bf/sMTieVU
      KsUMYXi3RoQT75PKa6mngKqJzov9/X3cuHGDGwAO57oxNzeH4+PjoZ+Th07qkp7vww8A04gq
      UcaJN5RVq9WIESDvPw41NY1aYGkQimVZbDdASp9JhEtOBUHA5uYmBEHAwcEBarUaRFGEaZqR
      klWq6kkK/dDQmPNAkiRICPCF9Tz+3L15zKU0/OMnFfxnv/sRes7oGv2k6+a6LgvdTdJkOo8F
      OgnavZwGmiBH740bAA7nEqEEZJI332q1WEJUUdVP5gIIiQs/hTGSVDRbrRZTBE1asCkcQ8qk
      SfT7fVbFA4xPmI5CEATouo61tTWWAHddNyIfPQ56rKqqp9oJZFImPrdewi/em0NWAb779Bj/
      4x8+xcv26XcVJE39OnEcB5lMBrquTyUhEUbTtGjJ8UWcIIfDGQ1VvMSTshQuII/fDwIo4uhQ
      Ubfbha7rQ+Mfpwk3DAaDsbIC8bzELIs/dbGKoohisXgiTqeK+Oq9VeQUB89rFv7JwwbsCWWS
      kiShUCjMpAaqaSrulNP4+btF3JnPYLvp4es/OsZOtRMpzZykWDotNBCGmsdOzkEbK8UtiiIW
      FxfRbDZPJe1ASXcK4c0C5VpEASgaKjcAHM5lQguDbdvQdT2SDI4LwvnBScdpGPKKaUwhgMhQ
      lmnPYVJ4wnGcxNzAtFAZqCAI+NSijr/2S4tYyr5KEu9ULfz7//tDPBvTqEwhsWkWyY2iiV/6
      1CI+u1bEi46Lv/fBAf67b53kREiHKJfLMcOUSqUSQ3GzIooifu3Xfg1/+Id/iMePHwMAfvZn
      fxa1Wg3f/e53Rz7nK1/5Cr7zne9gZ2cHX/7yl7G1tYXd3d2pj/uTP/mT+Na3vjXVY1OKhNvF
      FN6dy+BeOY2ioWLg+WjZLjcAHM5l0u/30W63oWkaOp1OpPImjh8EUEPDXUiLhurvSVdHVVWW
      WD0vkkZWmqYJz/Om8sa3trawvr6OxVJuaPEHgJslHX/z127jF3/zIfOYae5AeIg6hYCSlEFL
      uoh/6U4Jf+b2/8/ee0fZdZ/nuc/u+/Q6DZgZDDpANPZOiqREipSsStmWbMlRnLjFuY4T59rJ
      tZ2bGydetnzl2FbcHcmUVWxLomUVS+wSKXYSBEiAAKahTp8zc/rue+ePg70xHQAJkpJ8nrWw
      FmbmzJl9zgDf99tfed8uphsOXz00yf2jJq4fACKdnZ1REgnvShaWn8KdiYXJM5SpWM01bCFh
      P2BpAg4/FkWRYrFIs9mMtIzOnDmD7/s88sgjVKtVcrkcGzZsoNls4roupVIJ13Xp7u4ml8sx
      NjYW9UIURaGnpyd67qXb1AlFojOpsTWfYHdnmq6kRlKVqVkuZ6oGVctlcLZBd8olpytkdaWd
      ANq0eTMJ7Rd93yeXy635WNsLiC1Y7g3F0QRBiPxmw8TQ1dX1hl536FdwMTo05XKZD165PPiH
      bOqMc22/zouqvuLXQ8KTezabxa7Occ+OTq7uiTMyPsNjxyv81hPjOD6IogIiJOPnni+0tlyq
      8hkuoMHijeZwPLa3txff99cssWQyGY4dO7bq10VR5N5776XZbGKaJj09PTz44IMcO3aMe+65
      h4cffpj+/n7y+Tx79uxhy5Yt/NM//RNbtmxh3759jI+Pc/PNN/PlL3+ZarXK+9//fjKZNI1a
      jd58mpv7C9wY62drIUFGU2g4HjXLZaph0rA9Zuo2JECXRLoSGgICQ3N1nhubZ6Ju0nC8dgJo
      0+bNpF6vRyfp85Vt/ABEzp2EF8oRrzbd80YRSjNfjNxEtVolHqzeMBUEgf58jEePTa75PJok
      cHWnwvv3xinN23zj8Ah/8E9z2N7i6aFcLrfMAatSqeB5HplMZtG1m6YZuZt1dHRETW7btqPT
      f3giX42V1ExX4qGHHmJycpK77ror2gOBVkJ/6qmn6OvrY//+/QwODqIoCldffTVf+9rXmJ6e
      5u47buO91+1Fq87w7g0aJ4+9hOM6bLQDcimYaKrULBcRAV0WSakylqfyylSF4bkGJyvGsvdp
      Ie0E0KbNm4TjOJRKJQzDQJIkPM9bMSiFwnENo4POVMssZGlJYqFN4xtNKpWKSlYXO41zfGbt
      RvPp+ZWfLyaLXNeb4ub+NFLg8ujwLJ94cpzDQ6OrvuZQjiIcMQ0TbCaTieSoQ3Rdx7btqNeR
      zWaXNb4v1H0Nlm9ZL/zeUHhupYmtyI9ZFBjI6OxdX+QdySa33HkZIpeRTKepNw3mUwVqlTJ1
      wySpysSEAEnVmRfjHJmuMDI3j+m0xofDkqEgiGjxBPrZktTC0lT4p50A2rR5kyiXy9FYpeu6
      i6QSgGWTKbN1g72FBJZlLUsAb+bpX1VVfN+PJKsvBAHY3Jng5u0dVAyXTGx5qBmdNXhiqBwF
      LEUS2NUR5x2bsqQUeHxklt/69immayaSJNHf339e8baFUhgLT/IryU93JFU+fmsf79zRSS6h
      MTzT4LPPn+IfX5nCW7I5vRphQ723t5fh4WEURaGrq4vBwcEVHy+LUIyrbJAsfmJHkeTWBFfm
      G5Sv7OLUpIAsScQ9i0qzCa7DTGmOqhMwZkE+s4G/fO4xKqbDT3ZfzdMHDyPLMmMztdZkk6Kg
      LAj04fUt/RNqUPm+304Abdq8Wawkq7AWFcMhpSuLgtfCJZ74BfjIvl7Css+F6OiH3LStwEeu
      72WqYvEnj53mc0+d4b5/vYeB4rkS1uiswc9/bhDHC9ieV7ljQ5LulMaBsTKf+s7RRRLLF0Mo
      rBc2ecPS1VK25HXu+9Be+rPn+gVbCnHeuaODzz53il/40su4F5gAXnzxRT74wQ+yfv36aDb/
      +PHj6LJEt2Dx3i1F+nYV2LdBwrBVaqntbIobnEypBLbPfKVGsXsd6d5NfOmRJ3j86WNsu+ZG
      TkxME0/FGRoa4sCBA/zE5it5970/hm3bZLNZDMOI7sxeq+lPOwG0afMmkUwmURQlOuXbtr1I
      uXKhjr4oihiBSCamEo/FIunhcKol7AnIsnxJDUKWEur7nK9foSsiH7x6PW/bUeDAqQq/+reH
      aNrndgcu//UZ7trTyYZCnLGKw2xD5Ob+ND9zeTcvnp7j08+e5HR5sWZO+BrPt3gV7lCEzVzf
      96MGb6PRWOY/oIgCf/q+LYuCf/RcwE9d08eRqTq//52RNX9uyPT4GR77yhe4ZdcWBpIyQb3M
      DXftJKPJ+FMvs6knwXTdZGJqBtdzma42efjhZxks1TkyXcUDisUONE1jfHy8Ja19eIR8Pk+1
      WqVSqeD7Pp/73OdYt25dZAJkGAau67J9+3YGBwdX3A4WgIQgk5MUipJGtxyjKKnERRlFENoJ
      oE2bNwtd19mxYwfHjh2Lgn+9Xl80nZJIJKIpITsQSaoSkiicHW1kUc8g3LRdugh2KQlHKFer
      /XekVD5+XZHizQm+tn+Sf/vZgzgL5DNjsRixWAzXsXlptEy3qnH3QJGJps8jx8t8Zv8Urh/Q
      dM/tNSwVbAtf61osFK6TJAnXdaNkWavVojsBWZZ528YMOzpWb+AKgsAv3DTAH3/vOJZ77i5N
      FgXyMZWthQQ7iimu3tyFti9PLh5DxsM2LezAxc8kcUSFCcvjVKXJ4ekap6sGdduNfo8tNHLF
      jugjy7IWNYlN00RVVTo6OqK7r9DrIDS5CVyPGCKX9w7gTJXoFFTykkpWUtEFEY+Auu9S8Rym
      PJNhu8bTnoUReFhBuwTUps2biqZpbNy4kcHBwegUB+c8gWVZjhrEMzUTUQCjXkPS46s6YYXy
      yrCy4fzrIRQ9W1qu2tad5F/fNoAiCTx2osbXv3eIgLNSFwvEz1KqyL17u7lufYKhqQqPjs7z
      teMGrh9EAV6SJOLxeFSzL5fLkUrphWy6JpPJZQmi0WhgWRaappHNZqO7JoB93WubuwP0ZHRu
      HShQ0FV2FJN0xDUSqkQ+pqJJIq4fIMU0jpcsDp2Z5tB0lZNVi/GmQ8X28C9Bi0YQBARap/iM
      qNIla3TJOt2yTkHSkBFwZY/KjIElK4hbdzA0P8Nj46ep+g5mcH557XYCaNPmTUQQBNLpNIVC
      gdnZWeCc7k6ovqmqKoZhMFdvIgjg2Ba+pKzYyAwbegs9BpYG62KxiGVZUcngYgmfTxDg7Zd1
      8IGr19N0RT75jcNMViy2bt0alahc1yWtSdy5q5MbB/LYns8/HZniLx4v4flBJDtt2zaaptFs
      Nhd77a4x2bTa58OJqJBGo4Hruqiquuw9UyWBtH7+UVZZEPjdO3cx33CYaVhMNy3OVEweHZ3l
      1dkaI3MNCr0bGB4eJhaLcfvtt3N5fz+X2TaDg4M89dRTpFIpent7OXLkyKLfSTiJE5apMskU
      29b1Ujs1RlFQ6ZR1sqKCLkiESiBlz2HKMDnlzvKCazHjWbhLPMn0eZ2BgQGmvQuf1GongDZt
      3gKy2WyUAMLSREgY6KqGTQBIghCZwSzdiBUEITJgicfjy3T1oRUQU6kUtm2vmAAURVlmer6Q
      hCbx/qvWcfvODp4aKvH/fW0YlDjTlXOBJq5I3Lwxz13bOxEEePDYNP/pm+fUNmVZRhKCaCO3
      VquhKAqJRALTNC9q9HIps7OzxGIxVFWN+gAxXacnG2dzR4KdHXE25XS2F2J0J1Sy2vnD3ljF
      5Be/cZBjs3VqlouzwpE+LNbccMMNxGIxvvSlLxGLxRgYGEBRFHK5HNdffz0nh0dQfUgh0inp
      9OlJOmJJRNNGFSViiThd6zfy3dkmk47Bc8Yc84GDmohhL1j4g1ayk3WZwBRhiT5Tf39/JEex
      GqGGUCgF0k4Abdq8BSwt0Syt7QOIagxBaNWeXdeJxkZXc/ZaLQGEmvur1fFTqRSSJEVLUKE1
      Y2da4ydv7OOy9Snuf36cf3PfAWzXPxvc4sQ1hWt7M3z4ug7MyzSePjnHbz8yyFxzefkplUot
      es3hvH4oafBadf8lSSIZ18nIAXvXx7lmoMCWwkY2ZHTWJVSkQKDadHG9gLgk4ZoBYxULUYau
      9MrG9EEQ8AffHeHp0+eXcxYEgWQsjlWtEaubdNZ9UuURfiq7kZ3FDaQG59i19zbmLYNjY6e5
      8s7bqSjgxTWefvkAh44e4cff9eOQzdK9vRPr5ElefPhh7nj7HfT19SGKIs8//zwHDhxg9+7d
      3HjjjdG46/3337/ofQuNfdaaDAs9HULaCaBNm7eAhSWBIAhoNpuRg5aiKBiGgR0IrTuAs3WA
      8IQeWkKu9JwrlVBc113kRRyiKK2yUjiZlM/nEUWBjTmF9+3Joqsi933vFH/15CSKouL6IIoC
      V/Xl+LEr+kgpfbw40eB/Hyjx/KHVJRFCu0nTNDEMA8MwyOfzkZz1hY4wCoJAQpXY3plkW0eS
      K/qy7F2XY2suTlGTqZs+cgCW7aOIIpPzNieqJierFserJsdm65yqO8xZHhtzOp/90DYGcssn
      gf7qmZP86ZMnFn1OFUQKkkpR0uiSWnX4fjdDLbsF+cXj9Pb18a677+W0UePB/c/y/NwJHolb
      3H7HHXz+85+PfjePf+eblMtlisUiH/jAB3jhwEt8/etf5z3veQ/33XcfnufR19dHb28vn/vc
      50gmk3z4wx/m2LFjXHnllTzxxBMMDw8vWlwLGR4eZufOnRw5cqR1zaJIVlPIqQpFXaOgqeR1
      lYKmEpOl9hRQmzZvFUtF4AzDiMYVw//YpWodLwhQZWnR48JgvbTxGU7sXAiyLEdaRJ7nIYlw
      y9Ys79pTYGLe4I8fHuTMXCvhdBYL7OhKcdOVHWzvSnNk1uC+A1MMT8wRi8fPq2nkui62baPr
      OoZhLFJBXU3SQhIFOpMq2zqSXL4+w67uNNds6KA3vh1dkMAD3wXb8ynVXZ4brzFaMTk2bzA0
      bzBcNqk53qKpm7m5OeLxOLquc3ze5Ec+e5iPXt7JzX1xOmMa03M239w/xUtDVe5N9JIQZWKi
      hIyAFfjMeTbTnsmYa/CiOUd3p8qx+SF8QJsfpr/cz+WXX86VH3g3r9x3H3HPi9Rffd9HVVV2
      7dpFsViM1FzDkdXwcZ7n0dXVhSiK3HbbbZHcdCIe5/jgID9y+22Utm3h5LGjeHJAXlMpaioJ
      RUKXJIqpOPJt19I0LZq2xbzlUrZs5m2bku3warnKnGXjijKGZbUTQJs2bwW6ri/SrfF9n/n5
      +chuEFpjgXXLJZ1IQPlcaWclbf5wyuVC5CE0TYsmZxKqyI0DSe7Z180zoxU+8e1TTFeaVMoG
      fdkYH9rbw+71eY5XbL72yhif/O4okiyjqiqiJF1wwvE8D13XkSQpqtOHhjVxRWJdRmfvujR7
      etJcvi7Dzo5k66QqSvgeWI5PzfI4MFrl0HSVY6U6U67E8apFyXCx1xi7EQAZgaIWJ23D5liS
      gqCQdWUaL/j84/dmqXsODd+l5NnMehaH3Sp138UIXFabpSkKEAgCqWSSer3O0NAQ4+Pj/NzP
      /VykNLpw+mjHjh3k83m+/vWvo6oq//Jf/BRxWSItSxQCj2s7cuQVmcvjEhub8+wRTDRBQHj1
      RX5tex9Np47x9GMkPJ8PXn81j7/4EsfGJnjWnMNwPQzPw/Q8CsUObNteU85bVQWc9iZwmzZv
      HZqmLSt/LGzEBkFAzXIxjfNv+5ZKJXp6erAsK5Kbdl13xaZvIpEgn1D48LXdbOuM882Xp/jV
      r4xiux6dSY2fvqaX7dkNnCkbfO3wJH+5f4pEIkmtZmA7DjgOhmEsG79cLfmEE04A3fkMe3uz
      7OqMszWvsTWrsSWXoKAr+C4ELpSbDkfHa3y3WmawbHHwzDQnqhZBKs/UzGxkjJ5Op/E879y8
      fCpDUVToQKEotP6oiAiAS0Aj6TLrWZQJeMGYo6kIGELAzPzM65LWuPPOOxEEgenpabq6uqjN
      z5EJfNaLAXt0iX911R50x2ZzV44OweRtN15OMh4nU5shvXMjth+w1bfIv/12hsYnefDoEHdt
      38WhUo2xmRIbNmzgkacPcOuttzIzM9NSMo3neGRilpnSa7PNDP/dtRNAmzZvAaIosnnzZoaG
      htZs2tVtF01aPP8f2hIuDMBBEDA5OcmGDRuYmZmJ5BAWGr8ItObtrYZuAAAgAElEQVT3f/Yd
      A6gS/MPL8/zFExMkFfjgziL7uhM0bI9vDc/zl09PUaufuy7P85c1rhcmmGw2i+M40WtRJYG+
      bIwtnSlu3NrD7o442/Mx+pIaYiDgOQEzNZsT802+emKCwVKdV2dqHJutM1E38YPWclcul6Nc
      rqIqCgMpmc3xDIVkB/GmTQaZpCITiylIoogji5QCh9nA4WhgMOtXsfAJWOBs5nvUKrWo4R3u
      X6zleKaJLZXNpCyTP1tHL+oqO3pyNGJbyU+fpKejAycl05g5Re1Eg/f3dTJn2XzngW+jd3Rz
      uNLgb777LFt37SaZSjG0/yiF4iyHDw/iOA79s3W2bNnC5FSJI+NTDH/x79m5cyeJRIL9+/dT
      q9V4/vnn2bp1K/F4nG984xvRFNlSLkYkUAiWPPILX/gCf/AHf3BB39ymTZvXh2VZHDlyZMXF
      LU0Q+cyHruB/PjHCC5MVgiVz36H88UKCIKCjo4NKpRIZqwe+yzUbs3z0xn7OzBl87qlT1Eyf
      9+wb4Mb+NH4Q8NBImRfH6xhnxzbD7z8fAnDF7h3EnDrbCyrb8hp7ujPsKCYp6CqBB5Wmy8my
      yUjZYnDeYLhsMFI2mao2mCjNEwQBEgKaIJIUZbpknS5ZpyjrdMYSqAgIooQji0w1qlQVgVkc
      xpo1SvUqajKBqmmLjF9CBdVwuipswlYrFXzHQZVE4rJE9mwNPacqFHSVlCKTURUSsowotCS5
      Dc+j7rjUHZdZ06bqOEwbFpl16zk0NIzt+Viet2qp6FIR6hydj87OTkzTXLHxv5R2AmjT5i3G
      NE0GBwexLAsZgdvindye6GRASZBVFJqey7hn85QxyzerY9T91qk7nDVfSWI4n8/jWCa3bdK4
      dVuO7x2Z4v7nx7i6N8PdO1rmMY8OzfDEiTKe1Go+S5LE3Nxc1JQMSSaTOI6DbVnk4gq7e9Ls
      6UlxZW+W3Z1p+jIJUpJIw/B4darGsZk6R2ZrHJ2pcbrp0hA1DMdDFAQ0yyXni2xIZCkICmk3
      IHA9AqDpuzQDj7IUUNVE5nyHE7NTqKlktEA2OjpKJpNBURSCIKBcLuOcbTBrskRaFMjKEkVd
      pTuZoCeToqC2VDIlASzbpmE7yKpKw7SYaZqULIsZ06ZkWtQcl7rjUb+AhbmtW7eed+7+UhL+
      HizLQpblKNktpaurC8MwLigBtEtAbdq8xei6Tnd3N9pMhV9ObWajmkCNCSSyErIq4LsKHVWN
      bXKC98V7+KO5IZ4xS5HO/FKTlo6Uygd362ztzPHMaYf7n5vlpt40v31PmkeGZvjNbx2hbi8M
      HC0NmjCgBEGAJosM5OPsWZfh2k1dbMvpbMvp9KdjVJouo7MNhmYafPHZMapqku8cGmK8apJA
      JieqkWTBLUqGjB5rRRrfZ0poUJI8KriM+iaTXpPZ+blF1y9JEsViEYWAlCaTl6AvqdOd0rh2
      4zo64zFyiTi6JKGK/ZimiSDJBKLIVNNgstbA1XSmbZej02XKjkvjbAlLlmVKpRKJRAJRFKlW
      qxd0qn4jCaeBzrelvVAUT5Ikkskkc3Nzy8o90kU059sJoE2b7wP2Zjv5mLeenKbQtUkhlZcQ
      xHMn+yAIMOs++ojIr4s7+eTcMb7TnFlkKrO5Q+fHru5Ek0SGxuqcaFhcW8wwLBX59IvHGTwz
      jb8kMIgCFBIal69Ps6OoszXTze6uFFvyCQIPZhoex2YaPHV0hvtm6ozNmzQaHqlAoUvSSIkK
      fXmZ97AeLx1Q9hxKnsWUa/GMUaLccIilU0iqgiyAqgskFJmMIrJR1blSjqN2pEkqrRq7Komo
      Z6eMTN+nVM9RMkwqtoMZwOHZMtPmFKKmo8ZiWI5LwzCigB72JXTdit630OnLsiyy2SzxeDzy
      Vo7FYm+4pPb5CCWkLwbLslZdnruYhNZOAG3avMWoPnyoopHTJDbs1VD15aJvgiAQS0n07xY5
      cwT+bbCVEbvOZK3K3VcN8KErO5ERqFddYh5ogsQ/Dlc59UJLJiGRzFMsuMhOg709afatS7O7
      J82OYpLOuMZszebIZJ3h6QZfHpqgXHbBEknLCXTXx3ehK4iT9FUqosO0Z/GKXaEeuPRpOrPO
      GQqaRjGuklEVBvQcOU0hE4shAooiY3g+lh9geh7zjsu85TBu2pyZLzPfNKg7Lk3Xg7N6SKEX
      sOM41Go1NkkxTtYNfN9HExySqtYaw0ylIsXSpQby4bJZKJntum40kbSaxWUoyhcaxr9Wrf0L
      pVarXXKDn/YdQJs2PyBcbUh0eiLrdqgrBv+FSLLAuu0a5os+v775Mja8S2Mgk+DgyTqjcwbf
      GppjsGSiyyKb8jof3NXBnq44e3syFNQ+HNNhdtZmesZm/qjDw+U5JisWrhcQBODhU8PDFgNM
      yaaChRQTWncmMZ0OSUEU4kiCgHc2yCTSaUZFm5JpM2NaHC3XmLfnsEQJIRbHtu1Fcs3O2TFS
      0zTPlWKMc6dZgZaNY6iRtDCYhYtchmFEUhLQOvWuJJYHi/cmFlojNpvNZf0TQRDIZrNRjyFU
      Q30jeTPd3ZbSTgBt2ryVBHCFIRNLi8Szawf/EEUVyHbLbJxK8PLhEp8aO4Eej7O9GOfje7vZ
      lorRq6oEDajNe5QmXGYGTQYNF1VRaDgGnuTjygF+KiCfllHls4E0AMvzmLcdKrbDjGlRMm2O
      lGvMWTYNt6Vp7wXnZpJ27tzJxMQ8tm0jCAKWZREEAYVCYZHQXRiIwwQA0Gw2yWazi0YXw9O8
      pmmRdERIaI8ZKqeGrGZWv7RR6jhOVCNfyUgn9MpdeOfxw0w7AbRp8xaS8KHgCiRz0kWZuiRz
      EqUxh31mjrf1dSK7Im4twC0HuEHACdmmLnqUcZl1HWaFJnZKomy7UEhxcGSUiVqD5tkNUuPs
      JM5rIZQrCE/gocxzKPkcbsPWarUoSYSE4mRLT8HVajUydgl/BpyrfS8df13r2nRdR9M0arUa
      pmninVXYjMfjkUxFiOd5q87X/zDSTgBt2ryFxAMBkVZz9GJQtFYZ44njs7zkz1N2HaqeT6DH
      aPgBDW+x2Fx4om79fYwNGzYwNXfsosobiqIs8h4IcV2XRqMRST2EngeNRiMK+L7vR03Lpd+/
      UtMyCIJVp2JqtVqkYCpJUvT9q90FiKJIqVSKElXY9E0kEvi+v+IkTfh84S7BQvE9x3EimYVw
      Nv9CZ/S/32gngDZt3kJcIAAuNnb4fusbs0mFASHOeNPEbhjUHQdBXqwUGga+8O+6rjM1NcW2
      bdsYGRlZ1QdA07RFpRZJkjBNc5lHb7iZ7DhOFGDz+Tyqqi7aRL5UaJqGLMvMzc1FQVfXdTKZ
      TBTIw5JS6DoWPm6hXHaz2VzV7F4QhGjHYuGkFbSCfnhnE47P1uv1i57k+X6gnQDatHkLqUoB
      tgBGzSPbdeH/Hc16K6DtzKXJmyrbNZdS2qIeuGSTcZJnT6ym71N2XGYsh0nDYtJyqDgepucz
      PT3Npk2bmJiYwLKsZeOQkiS1Ah1Q1BU6NYWKqXLYNDDcc3X1VCpFf39/9PFCC8al/gXnY7VT
      tCiKreW2sxvTgiAQjy/29Q0bxpIkLVNGTaVSKz73WkqmYYNZEIRoCQtaCS8ej5NOp6PnTCQS
      kY9x+D0hC+U6lvJaGsCrif6FH+dyuTVHW0PXOautBtqmzVuLJ8Cw5pEsCXRuCJCU8wfLIAgo
      T7n4mo/d6bAxEePkXJPalMg2UmiuzFDVYtgyOeGYGIFPXpPp1hR2phNkFBldElHOes76fXs4
      MjHF0EyJ8YbB6YZB020Fs+uLKX52aw+7MnHkswFxqmnylZFx/ujgSGt0s9lkcnJyzWtOp9OI
      osj8/HxUtlkp+K3meyyKIrqur/lzVFUlmUxGhifhmGeomVSr1XBdN/JACH0YwjuF8L1d+D6H
      bNq0iZMnT0bPK4pipLm00vcs/dxqSXBhwrgYY5zz6f2s9bV8Po8kSZTL5XYCaNPmrSKmibxj
      R5rbApm5hxtMn3To3qyseWIOAqhMeRhVn28FE2xtxDk8V6Vuety2vYOq7/DoqRmmXJvNiRz3
      JHJkRZlx0+ZQrc6zsyUm8KgtiA9pWWJbZ5GuQoENSYMPJXQSssyezgyXd6QRl1xPd1znF/ds
      4u29HXz0wReiRauVUBQlElyD1gk/DNIXc/oVRbElR7FGz8LzPBKJxDITe1VVI9ObcFw0DKBr
      XXtIPB7H87zzBudwuui19AI0TUNV1QuSbzgfK+lK5XK5qOFdq9XIZrPkcrl2AmjT5s0mn5a5
      c1eGe7IaHaLP002LQxmPKydBkqHYryCKy5NAEARUZzwmR23mZItPnzxB84zHvs40P7m7j0eP
      T/HsmTLX9+T40WvWU5cDHh6v8MyJKjFfZG8qwUfy6+iXNZpewJGawbBlcLjZ4JWJaWKZDKW5
      BnPDp7mnr4OfvKx3WfBfyI5cis/fdTXPlh1GxAEmDJOxhsFE06ThuDQ9n0QisWhiJ/QmfiNm
      30MZi7Bp63kesVgsGkONx+PRzw17GeGIaPKspv9KKIoSyXVAK8CuFGR1XV+WfEIajcaaiqOW
      ZV2yfQNJkkilUlHSlWU5eu2u27pjk2W5NaJ7SX5imzZtzks+LXPvzQXekVBJ1x0mdYf/98Uq
      L5yyEFXwYgpXnwlolH3y62QSOQlJap36m1Wf+QmX+pzHLBY33ZjlVzPb+O8Hj3JwusrBRw+z
      s5Dk43v7mTcdfuqrL9CXivOjO3v5mXds56Rt8tDYPH94ZJxTZ6bZ2pHjms4iV3Uk+VisE8kT
      GK0bjOWKPD89yX+6ojcq+azFtmyS+6cmeXR8mp64zvZMilt7iuTjcZKKjCxJWL5PyXaZMm3G
      TZujE1PYYmuRbA0fl9dEqVRCUZSoIRyWX4IgQFVVGo1G9LmFAXm14A+txKsoyrKeQ/hcC1lp
      PDWRSKDrOtPT02te+6VKio7jLOpPhJ8LCe9ooN0EbtPmDaeroHDvTUXuSKokpkzMlM1fTzb4
      8sE64bSmL8DX0w4nVZ/b6gHmYOsLonhuQqgauPxjfZyvVE7xP47t5j3bepBFkd86cATL9zlS
      qvNrj73KjkKSX7pmExXL5c+OTvL7r05xfUeaD24u8u8/1MtLc/N8bXCKx0an+dp4a/GpS1fY
      lUmwNxnnl7atZ2MqdkGvTRAELtMF/qRhMlprIoplUqlUNHXkeR4xRaFDU+jSVdbpKrs39ZKR
      RWRBwA/ADXwqtsNE0+R03WDasJg+q8x5sXieFzWAF9bJHceJjGlWG9lUFAVFUbBte9EIqiAI
      VKtVJiYmookqQRCYn5+/oKCdTqcjF7Q3g1qthqqqlEql8wrMtRNAmzZvEFv6YnzwpgI3qDLa
      GQNZt/iOYPMX36gw21ihTizAyzGPw7rHOkek1xGJ+y2Z5CPVEkf9BhP1Em7g818OHuav4lex
      ryfNb4m7+K8HXm3p6AAjVYtfe+xVtuQS/MwVG/EkmftHS/yHp0dJvSBxVVLm/du6+K83bedw
      vcmDx8s8fGyeR6fKPDpV5s7uLL/bs+mCX+fmTJJisRidKgVBoFwuR1vBmUwGJwgYN1sljnq9
      Hk2pSALIokhGVVgf1+lNxNiVS9MV04jJEqIg0HRb8sx+PMnLRpHTDYOK5VB1nBWtIBf2UMIy
      iGVZkS3lSlvA4e6CLMs0Go1FdwTVapVisbhoe/n7GcdxSCQSixriIeHuQ/ha2gmgTZtLiABs
      7o/xE3d0cLkvop820PMOg1mPP32yysGx89d5PQFOqz6n1VaSCIKAWdunWTvnwNX0PP798wf5
      wi3XksvI/Jd9O/kfB49Sc11SqRTVapXh+Qa/9ughrhhYz49u7SShSPz1K6f4+6Pj/N3RU/Q/
      FuOegS5+dF8/v/LjvRxuNvn20BzGzMWdvIuyyo9k8ww7JidNi+lyeVE9u1arIYpiVB5ZuFTl
      BS23sWnDYtqweKm03Mc2JklkNJXLt2xEEUXe1lMkr7XMWxSxZflYsmymDYuxpkHJ9alLElYQ
      UDdMFFXF87yo7r0SYbmo2Wxe8CTO9yvh3sNCT2BBEIjFYui6Hk0utcdA27S5RAgC7NuW5F3X
      57kCEW20SSIrUO6BP3u5zjdfbeC9xkXRcCkpFE8LT89TlsUvPnOAz992Ld9uTvDfr9zFJ4dP
      MVapLCpxnKqZ/OHL4xR1mQ9t6uAjWzv4zMGTHCnV+fNXTvB3p8tcVsxwd2+ej23vZNOVMYwz
      qzcsl/Lw2CQvTEywN5fnHYUugkyBimOxv1xmyKgx1jQxTTPa3F1t1HM1DM/DMi0G6yajY8vr
      6AKQ0xQ6Yxrr4jF2p+JszGdJqApiECCJEk3LYsZxKbk+E6bNqGNzYsni1tzc3LLnvlTEYjHS
      6fSqGkSXkjDRplIpZFmO3u+FBvWqqjI3N9dOAG3avB4kEa7bk+HtV2XpmHNJHmog5ARqnQLf
      nrT4wkM1ysbrlwiQZZl0Or1Mp+ZovcZ/fvYQn7xlD388NMK/27KBT7x8hCnz3Ck2NBuZanj8
      yavTBI0qP723n3+5V+Wzr5zi0GyZV4Fj83U+9copdmbj/N87e7myI3ve67I9ny8MneHlWoWX
      a5XWklIQkFNU9qQyvK9jPT26TsNzGXcsjjSbHLfMSyqdEABzlsOc5XCs0ji7qFUiHo+3ZBoA
      KfDpiulsSCfZlNC5ItFJx7Y+fM/D9X0arkfVdhhvmow1TKbOehBUX0MfYiVCWYkwidu2veIk
      0YWSTCYxTXPFGn9496UoyqKgv/TuJxaLtS0h27R5LciSwHV70txxVRb1jEVyzKIjJ+JkBcY9
      n79+vsbQzGv/D74a9XqdwcHBKJjIsozjOPx0Xz//4YYt/LcXj3BttsAfvTrM8XoDTdPIZDJA
      q0EaCrIBdMZVPra7j3WpGPe9fIpXZqqRINxluRRfvuc6MpqyypW0Au9nXj3Bbz57ZM1rVlWV
      GAI7Ozq5LJ5kg6YRk0Qmm00OVeY51qgx3jRw1mioiqLIwMAAo6Oj0WhneJIOxzRDyelSqbSo
      OauqKq7rIklStPlrmia+71Ov15EEgYQskQ77EMkYnbpGTlNJKq0zsppMMjo10yozNQzGGgbz
      toPpeTjnGWVKp9ORe5fjOFG56fVM/YSveeHdRDKZpNls4vs+mzZt4vTp01FfRhTFSKcp3DmA
      dg+gTZuLQpEF7rohzxXbkiinLOQnynQXJMpFmEjBA4MNHh00Lvl4Y0gymWTjxo2cOXMmklzw
      fZ+/PnWSvnic37h2B7/42AF+fvtG/nzwOMfrTUqlUiRzvLA2P920+eRzI2Q1hY/v7een9/Xz
      xVfHeHZ8nmPVJr/y4jC/d9UWciskgSAIqMZdTmkG2bhCublyshNFkWw2i+d5jDoWx6vnfn7G
      D+hyfe4udNO1TkOVRUYaDV6uljnSqNF0Vi5DhcFelmWazSaiKBKPxyPp6IWBdeFimO/7kQpo
      +L0AXhBQdVyqjsuZhsGzM4v1iwRBYNfWLcyPjdOl66xP6OwrZMiqCglFRhIERAFKps2ZhsGZ
      hnH2TsLAPFv3c133kmoFrbSLEC66QesuQJKk6DFhKch1XSqVSrTN3L4DaNPmAojrIu+8scCu
      gTi1V+skJh1yORFDD/ASIlOGx2efr9G033hzD9M0GR0dxfM8NE1D13Usy8KoVvmzq67kqh1p
      PvqtF/jowAa+MHqKA3MVkkrrhFuz3VXHK+OyxEd29XJFV4aHxus8N9MgpUh8ZKCTWzozFDUF
      y/cZtXyOmw5Js8b67hh6QeJ0o8njx2Z58NA0szWbeDyOJEmR3v9Cl66QIAgWzcYLwNZEkl3J
      NPtyeRRRpOJYHKlVOdqoQ2cHQyOj0V1NOOZpmiaKolAul5ctW+Xz+WU6R5qm4XlelBTOhyAI
      bNq0iZGRkTUfl1UVehMxehMx1iV01sdjxGQJVVVxBIFyrc5k02SsaTLeMJgxbeYsOzLWuZT0
      9/czOTmJbduIokixWATOeTH4vt9Sam0ngDZtVicVl7jn5gID3Rqlw3Uy0y7pjICQEDA1CFSR
      Lx+oMzx76cs9a2HbNqdPn6ZcLpPL5SKD82QA9910DekukZ9/8AD/ed821LjA5V1ZdEnE8nxe
      mi5zpmSi+CKThsWTU7M8OV3CPRsKYrLEj+3q5YbeIo+MV3lyokoQgCoKWK6L5Xr09/fzyssH
      2ZROcPdAF7s70ugZCTENVc/llQmbx0eqTFfMqPSwlCAImJ2dXTEIq6pKNp3Gq9bYFk+wJ51l
      e0cHtXqN02aTo806Ewg0BIG5+flV6+npdBpFUSiVSq/5vV4tAUiStOZ2b0gmnSaTiFOfm6ND
      V+lNxOiJ6xR1jYKuRu5qZcth3raZOHv3MNm0aLgtm8yLTREDAwORrMTS9z8sEzmO004Abdqs
      RDGn8CO3FEgnZMYP1uipeOgJgVRWZMz16SjKPH3C5NEhg7fC0c+2bQ4dOhTJHaRSKaDV8N0e
      T/Bftm9gXUGlI7uytlAQBNiNALvZ+vuBuQq/vv8Qg9Vz8++ZuM5H9m3i2q4U/3RyjifGypQr
      VSzL4rLLLmNwcDBqQsqiwOXFDHdu6KQ/E0fJykg5BR+PZ0YrfHekRsVYHixN06RWqy1LAqqq
      kkqlosAd9gDGTpygX4+zPZHisnSanKbS8FxerVU4VK8yUmssOlGHo4+vR5Z6pQSgqiqiKF5Q
      WSdcBFtpEziZTLZ2FFyHrKqSP2u9OZCK06FrJBWZmNRq5Jqed7YH0UoQ402DWdPGDwL8s+9R
      qPnT3d3N7OxsVPpbCdd12wmgTZuFdBdU3nd7EVkUGHy+wnYLfBXyBZExyyNXVCg1Pb70Up2m
      89Z5ufq+z8GDB6MAnM1moybogKbz+5dtZvOAdl5hObPq454dGCrbNv/iiRc4XD4nSJZIJNBk
      kXf2Zri5t8C3Rib51sg0ejxOV1cXo6Ojy55XBG4f6OY9W3qRJQFDscl0yCiaynPHqzw2WGa+
      ea4M5XkejUYDy7KiRBDWqBc2McMm8FKSksyuZJpdqTSbkgkCAcZNg8O1KhOyyFTTfF0iaxda
      AlqNtRJALpfD932q1ep5m8KaKNIV01iXiLE+0Vqay6kqqiTiBQEeYEsKk6aNGUtwZGycshfQ
      XDJ/HL7fnue1E0CbNgIwsE7nrhvzEMDwCxW2OwK2FJAriNS9AEMX6EhJfHF/nTPlSzMa+Hrw
      PI+hoSFqtVqkNSOKIjFJ4lMbt3LVjgTKeQzmATw3oDl3LgQMV+u895EnV9ywVUSBd2/p5u0D
      HXzvdIlBKcPBV4+uWkdPp9Pk4jFu6clyfTGFSUBD8+nqVFEUgf0n6zxybD5KBqFrWLPZXDbe
      uFYCWKqPrwoi3ZrO7lSay/NFsorEnGkyatY5VK1yqtm8KJmJ15sANE1j27ZtDA8PYxhGpEx6
      KZEEAVUUSKkKA5kUV20aQDGadMd1dElEBBpea9x11rI5Pl9hdK7SngJq888XAdixMc7dNxWY
      Ktm88uQ8+xDpCgKCgkBKETlYd7lus863jzR58QXrDZvuuVgkSWLr1q1UKpVWk9FxaDQavDtb
      YCClI2sXZsIiShAQ0HIGgM2pBO/q7eGrp8aXPdbxA746OMHXhya5Y0ORX9yX5FBhL//7mVep
      Wcs3nKvVKrZt81AAD4/Ps05XuH19nk5HYcZ10CSB/+u29cRViedOVHnk2DyVs7r/jUYjalau
      RTKZjFzLwrsF3/dpyjLP+g5PTp6mXquRU1T2dnVzS+c6ehUFkYAzhsFgs8bBSpl5y4l6IJca
      y7I4fPgwW7Zsia55eHj4kkg/h3hBgOEFGGc3qudTOSYmJhY5uumiQIyAuOfQpanctq6jnQDa
      /PNk1+YE77q5wKlJkwe+OcWtusI6F2ZSPpuyMk9M2Vy3VScvSvzOw/OsMpH4liJJEvl8Pvo4
      n8txl55EVpcv/axG6+QMEEQn6bev6+Qb49OLDNkXFgq8IOChEzM8MVnlx67exe/efhn7J8t8
      7tApTHdxwPYdmw9tKvC+TUUGUioIAsfmDc5MWqQcCXEcho0msuzxS7d2oqgqT47U+N6wRN1q
      jXBWq9VF7lz5fD4SYwsVOkOpBwDDMKLH12o1PM9jxjN4oTzHK5pGuVzGsW02xOJsS6T42LoN
      dOoaVuBzrF7j1XqVwXp91THU14Lv+wwODgKt39uOHTuwbZtyuYxpthbjms3mqncGgiCQyWSo
      VqsXvEBXr9ep1+trmse0E0CbfzbIksD1e9JctzfN8TGT+++f4Ja4wm5ZYkzx2bNe4clJCzEI
      uGFbjM89X2O6/n0Y+c/ieR6Tk5PEYjEsy0INoGfzdoKLXLB1bR9FPVcuGkinKBQKmKaJbduk
      UqmWC1m5vGiufNOmzXzhmZf5nOdy4/o8v3fHbg5MVfj7I2PUbJecrvDpd1/BLX2FRQnpxh6F
      G7pTPHBqnv/nmZP0JzRu70zSGHU4VplHSsIv3dqJqqo8e6LG90ZiVJoOqqrS0dERPVcqlYqu
      MbSIDCdeVpr6qVarxGKxaBfihNHkhNHkwdkpBEAXJbYnkuxOZ/hA53pUSWTWsTjSbFBWZCY0
      BcN2X7dss+d5HD58GFmWSSZbQnqO47B+/XpmZ2eZnZ1FURQsy0IACopKRlEQfXAFkTrLf8Hh
      PkjYO1nIWtfb7gG0+aFHkQVu3Jfhuj1p9h+pMXioxu1JFR8YEzyuXqdxaM5mLgi4bWucRwab
      vHDKuujRuzeb0NFqbm6OIAjIaTqfXtePKEH3FgVROv9dgO8HTA07JDLnRgVfqdb5+YODLYEj
      zgWQWq0WqUj29PRQr9cXbaKKAly3LseP7+zlaKnGzX0F7tncteb133d0mk+8dKa10OW57M3F
      ub23g5gs8WJpnlRnnOu2FfD8gEPTHg+/MkHV9CJNnfB6CoVCZDUZLkSZprnsRF0oFBZtQ6+F
      Igh0qjo7U2lu6usn7lgYnsdJo8GhWoUjlRoN171k/05EURXIANYAACAASURBVGTXrl24rosI
      7HR83pvKsUHV0UWRAKi5Ls+US3zTaTItCpEPsq7rOI4T6RkVCgUmJycxDGPNSaX2HUCbH1oU
      WeCOa3NcuTPFMy9X+OzfjnF3RmN9UuUl0+H2AR2zAf9wssn79iU5XnL4n98pY7nf76G/hSC0
      AkBnZycACmAGAbonYNR8ElnpvM9h1nyWjrIfKVep1euRly60ygkLVTJt216k6gngB/D02DxP
      j83z0d293L2p87zX/5FtHXx+cJozZ5PZE2MlnhgrkVAk7uzv5DLimCc8npqt0D2Q5z/e2Yck
      Cnx3sMzXX6hhnn0PwvKV4zjU6/UVjdFDOQRFUZAkadHU0Uo4QcCYZTDp2oymE4yOjhKXJLbG
      k2xPpHj35h6SqsSsbXO4VuVwo8rxSuM1JwTf9zl06BAxUeLXN+/gHR09i83lgYyi8M6Obm71
      PP58ZowvnC0rhe/nli1bkGUZRVFoNBrnFd5rJ4A2P3Sk4hJ33ZBna3+MR5+f56/+5jR3ZXU2
      ZnWeqFvcvkHnVknjy6NNbtse4+51CT7zbJXSShr9P0A4wAnfY4ckU5nyUGMiyhrNYNcOqEx5
      yPK5xwRBwHdny5EscujFuxRd16MGdGj+0mg0ooC6KZu4oD6EJoncsi7DFwenF53KG47HV0cm
      +PbYPOsKOd65LscVvsqJwRrPz9Xo6FD5xIf3AAKPD5f53tA8hkvUDF6qBwQssoYURXGRL4Gi
      KCQSiWX6+QvfF2jJcB+sVThYq8BZf/qCorI3leFHcj309sYwPI8x2+BAucwJo8m0ceHy0iLw
      G5t38PZiF2u9ezFJ4pe6+pitVnlwdiq6xqGhIWRZZvPmzWzcuBGAkZGRVY1h2gmgzQ8N6YTE
      3TcV6O3SeOCpOR59vMSdWY1dOZ3v1W2u6FF5f0+ML400WV9Q+PgNaf7xlQaHJ+zv+3LPhfK4
      Y7FdlPA9gdmTDrl1MlpCWBSMgyDAbgbMjbt4LsTT574uSvAL29bz7NgEZdtpzYovaSJmMhkS
      iQRjY2OkUqmoERsKrAH0XqCjGEBPXMX3/RVlkoMgoOH6fPnEDI83QDNq3NGTZbMa4/ChJvvL
      dbasi/Ef7+xDEESeGJzjmy/WqZnLA14ogCYIAs1mMyofAWvKQqzVRAUoOTaPzc3w2NwMAAlJ
      ol+PszuV4Z3FbtKqzLRlcdxscKBSZrxpRuY9S3l7oZO3FzrXDP4hoiDwKxu38Vx5jrJ7Lkm7
      rsuxY8cQBIGenp5IDG8l2gmgzQ88hYzMe28rkk0pfPvJEl9/eIa7czo3F2N8e95kS1HmA9vj
      PHDK4JmSzU9cm+bQhMXvPjyP+4N96F/Gw9OT7ElluT5XwHNh9pSLGhPQkyKiDL4LZsPHbrYC
      mqwKyEooFwyiLHB5IcNvX7uLX/zeAZKpFIqiLNPKD0cYV/LABShbFz7nPm/aq9bkFwZePwgY
      a9r8zcg0kgA7MnHu7M7RqSo8u7/Eo6cnuHpzlt+69zIE4IFXpnjsyAyG0/ol1+v1Vn397Abv
      woAfKqWuxPkSwFIanseRRo0jjVp0l9Cj6WyJJ3lHrosNvXFUWWSoXueVWoVj9Rolo3UI+di6
      DRc8wQWQU1Te27WOz46dXPa1C7nmdgJo8wPL+k6N97ytAMA3Hi9RmrG5I6txR3eCB+ZNspLI
      x/YkeHrC4n+9UuPDVyXRZZH/9USZuvXDcuZfTK5Q4EtA0XPZKrX+e9tGgL2CDIOkCMSTLZkB
      UQJBivq+vLO3i6s7cgzaoTfxOf1+URQjb4LVasyPn5rlp/f2nzeY+UHAA0dPRwllabAN7QvD
      RFOpVIjFYqiqyuFyk8PlJgKwJ63yr3ZsQJVEHnpqmv2zZW7Ynuf3PrwH2/N55PAML5wxKNdb
      U0MrBce1AubrnfyZsEwmLJMn5lt+DhICWxNJLkumub23k5QigxiwOZG46Oe+PptfMQFA6/3M
      ZrOLPIkXvpZ2AmjzA0d/t8a7bing+3D/IzPUyy63ZzUGuhM8VjYZDVzevyPGiarLJ1+qccMm
      nV+6Lcs/HKxzbPrNFW17sxEEgSbwKavBnbLG7YpKQhAXlRQEEfSEiB4XEESB8IsLY7UkCryz
      r4vn9x9d9jPm5+ej8kKlUllxhv2h4zMcmqmxpzO95vU+cmKGl2fOWRemUilEUaRSqRAEAa7r
      Uq1WkWWZQqEQTfgIghA1oQPghdk6Dw2dJi5L3LK+wL/bt5mm4/H5h08zUmtw844C/+3923ED
      eGqkyuPHZjk9ObvKVS1/Ty81HgFHGzWONmrcPzWGhMDVmRy371p9amo1ulQdAVYsYy5NqOGY
      aDKZJAiCdgJo84OBIMCOgTjvuD5PpebylYdnqFUcbsvobOnWeLRs8lzT5iPb4sxbAX91uE4+
      JfHLt2d58bTJ7z08j/fDeehfERv4pmvxmGuzUZTIeT73diTpjEnIqoAonj+o7Sxk6ejoQFEU
      4vE4qqoiSRLxeBzLshgZGVm1bGJ5Pv/mgYP8/QeuoSepL/t6EMBIuc4vP/RKtF0tSS3pZN/3
      KRaLkVAcEI13ep4XmbqEqpah8xVA0/V44OQ0D5ycZl06wbu29HLvlnXMmTaffnSCKj43bErz
      G+/eRMPo4aFD0zx+dJaG/dbue3gEVNyWWczFJpy1tEJ936dcLkfeB7FYLPqc7/vtBNDm+5+9
      WxPcfVOB0TMGn/nHCUzD4+a0xp7uJN+tWDxes/jw1jgpVeTLw02afsCPX5PC8eBTj//wlnsu
      hCYBh30XBHiXDuoF6AOFZDJZ9u3bh2EYeJ6Hbdt4nkdHRwfPPvvsmt62oihypFTnnr99mt+8
      eTvv2txFTGmNpVYthy8fHed3nh6iZLSMSxKJRGTuEo5nxmKxRZNFIaZpLnPDWonJusE/nJyl
      VCrRm9S5d1sfW/JpJk2X//+rx2hKIrduyfA7P7Yb1/d56PA0jx2ZxXiLksGkZWL6PjHp/OO7
      CznZbBJf4BW9Fr7v43neORXX13Slbdq8wUgSXLEjxe3X5Bg+1eRTXzyDbflcl1a5sifGU1WL
      T083uKNP555cjK+MNDlRc7lze5x961X+bn+d43NvvWjb9xMnbY+tsdUtHpfyxPAojxwcWlRC
      0DSNfD7PVVddxeTkJGfOnKFWqy1qBouiiKZp1Go1TtcMfvZbB8hoMpuyCfwgYHi+QcM5p/KZ
      TCYjk5aw3r9UwmDhqTi8GzgfocomwJm6yR/uH0IUYHMmwXs39dCbTXOk0uS3vzpIw3O4c1cn
      n/jx3ViOx6OvzvDEYGnFaaI3irLr8FJ1nhtzxYv6vkfnpi8o+AOLdjmgvQnc5vsMVRG4+Yos
      V+xI8vJgnSf2V3BsnyuSCjdmNPbXbJ6v21zZqXLbep1Hzpi8OG2zo1vlfbsTPD5i8PRx859V
      uedC2RNT+I31KcQLKDE4vs+9Dz7Dy3PLBctC3fne3l66uroIgoC5uTlKpdKi0cpms7niCT5E
      0zTS6TSNRuP/tHenwZGc54Hn/5lZWVVZJ+rEfR+NRh9s3jcpiaRIHaRuyZbsnZnYnViHY2Mj
      djb8ZXZj7Yj1rmXL42uslTzjS7Z1WxJ1WKTESyRFiqJIsbvZzW6cjfsoFFCFus/M/VCsJNCo
      AtDdABvdeH+fSABVlY0m3yfzed/neXC+vfkZi8VQVZVSqbRhkVcUhY6ODi5cuHCpf+y6nFaV
      u7tbub/Zh90o88zUEi/MrWC1SrxvKMQ9A0FKZZ0XRuOMrFk4Pza5a59dzzG3ly8fuQl1mwKu
      qrF0in9/+lcU6vT/aGlp2ZACupgIAMK+YFEkHri9UrX7wutxfvlmgnLZ4Ba3lTs9Vt5MF/n5
      Wp7eBgsf63Hw5kqRJ6ezOK0y/+52N/GMzr+evLo9+vc7Cfi9Zje3umof3Vzv2xOz/N4rZ7b9
      uWolcmtrK+FwmEymMoO4OgA9n8/XLa6CdzYpq/UEyWSSTCaz4e7f7Xaj6zrhcHhXAwBUCtoc
      DgcOi8yNHht3hr3IssQTF5b4+fwKbs3Cw8ebeeTGdhKJJE+cXuK588vki3t3fvjftXbyu519
      29YCpEolfufM64xkUnV/plYAsNlsuN1ustmsCADC1eV2Kjx0h5++do0X34jzi1MJZOCES+Vu
      j62y8CfytLoUPt7rYDZV5gcXMpQNePSok/6Qyj+9mmQxuX+btu0nLlni91rcDNVJBRmGwc8W
      ovzuz0+SrVOsVIvdbsfr9dLY2IjP58PlcpFIJIhEIkxMTGybsnE4HObpnkKhgN/vZ3l5GUmS
      CAaD6LqOx+PZEAC2mnYF0NnZicVi2bLAy2q1mjnx6ohHmwS3OiVuC3sxXF6eW4jzzLkxCtkU
      jxwL897DIXLFyp7Bz4ejpPK7/9/ep5ra+N2OXpw1ZikDTGRS/F+jZxlJ11/8oTIoyOfzbQqc
      Pp8PVVVFABCujga3hQ/cE6ApYOWpX6zy1kQa3YAjDgv3N9g4nynx87U8TqvMJ3orVaXfm8iy
      mtM52mLlsaNOnhutpHvEPf+lsUnwwQaNh7w2AhYZ+e2ZtLPpLF8ZnuJfRqdrDoTZitPpNI8W
      plIpFEWhtbWVlpYWVFVlaWmJmZkZYrEYuq6bHUZTqRROpxPn25uYVquVeDyOy+Uik8lgGAbB
      YBDDMHC5XOZCpigK9957r9mG4mLV447FYpHh4WGmp6dr/ozT6SSfz9cNUK1OO490NXIk4GE4
      luLJySVmUhm8msqDR8Pc0x+gUNYrewbDK6Tyu7dn0GKz8/GmVm7z+glb7ZQMnclshqdXlnhy
      eZHcDtpCa5pGe3s78/PzpFLvBAufz1fpnCoCgPBuanBb+Mh7gjR4LDzx8xVGpio54267wgf8
      GpO5Es/Fc5SBT/Q6aHEpfG88y0SiRMil8Nu3ullYK/Hd0+lrpmnbfmWRoFlVcMoSybLOqxOT
      zC8ubfs6TdNobm5mYWHBzPnbbDZcLhe6rm+YvytJEoFAgNbWVpqbmykUCszNzZFOp82N3mpT
      u3w+Tzqd3tC2wGq10tDQQDabpbm52eypr6oq73vf+zh16tSGhe1i4XCY/v5+nn/++R3N761H
      luCw380jnY10uB2ciq7xndE51golfE6VB4fC3HMogGHAk6eXeOatCMVd3IiSqZzzr/eOqqqa
      dRPreb1es7ZienraLOIrFosUi0VxCkh4d7Q12vjQvQHsVpnHn1tmaqFyGqHTpvCI3060qPOP
      i2mKGLyvzc6tYSv/Op7h66MlNFXiUze6aG+w7Pse/deSkgEz6448NvgDLK+sbpuu8fv9BAIB
      GhoaWFpaQtd1/H4/o6Ojm1o6GIZh9rg/c+YMTU1NtLW10dvbSyaTYXl5mVgsZg629/l8G0ZC
      VtM8mqbhdDoJhUKUy2Xz7H8mk9kyAKRSKYLBIHfddRcjIyPMzs5e1u9KN+DsSpKzK5Wjp7c0
      NvCfburHZpH55cIqT52O8O1fzeG2W/jQDU381W/dQCpf4ukzEZ4fjpK7wj2DrV6tKIo5Wzge
      j1MqlczaDV3XyWQytLS0mE9FNpsNVVVZWVkRTwDC3upstvPh+wNkczo/eiFKZLWyuHTbFR5s
      sLNW1nlyNUeybHAiqPLBLo3n5/L8YjFP2YC7uu28p0/jx2+lOTV3/TRt26/W1tYYHR3dsvVB
      V1cXoVBo09dnZ2eJRqM7OqKpaRqtra20traaXTq3YhgGsixjtVrNo4zlcplXXnll2zt7RVHo
      7u5mYGCA06dPX3YQqMWuyNzR7OehjjAl3eDZmWVeXVwlW9bxOVXefzTMfYeCJHMlnjm7zMtj
      K6R3ec+guk8iyzKFQoFYLEZDQwM2m838XYVCIZaXl4nH49jtdiwWS2VcpAgAwm6TJOhr1/jw
      fUFW1or8+MUVovHKotBqVfig306spPNULMda2WDQZ+Ej3Q7G1or822SOXNmgrUHhN25yM7Zc
      5IlzGZHueZcYhsHY2NiWJ3c6OzvNGQQX03WdVCrF6OjojkcX7pSiKBw5coTTp09f1us7OzsZ
      GhpiZGTksge8b8VvV3lvW4jbmnykiiUeH1/g7EoC3YCgy8oDR8Lc3R+gWNZ54vQSLw5Hya/r
      RqhZZB7tbuY97SFCmpVotsBzs8v8cGKB7BZdC6u1FJqmUSqVWF1dxev1YrPZ0HWdfD5PuVym
      ra2N4eFhbDabWXwnUkDCrpGAm4bc3H9zA3ORPH/73XmSmcrdTlCV+bDfTt6Ab0czxEsGzQ6F
      3+7TSBcNvvhmklTRwG6R+B9udePVZP72Fwni2eusXec1YLshIgsLCzQ0NNTsBCrLspl62G3V
      QrHLNTU1RaFQ4KabbsIwDKampsxB8rthNVfkO2PzfGdsnrDDxkd7mvkPQ53MpbJ8f2KBb/5y
      lm/+cpYGh8ojxxv5L795jHxJ58k3l4hFC/zV/TfQ7XVuOP750b4W/rcb+/idZ05yKrpW83Or
      BW/5fN5sdFdNo1VTQNWfs1gsNDQ0UCwWKz2Wdu1PLxxYsgw3HXbzwG0+zoyl+dK35sjmKwuA
      3yLzsM+OXZb4wUqWlZKOS5X43CEHPpvMt8cyLGV0ZAnu6bFzf5/G906neWtx+5F9wu6TJInu
      7m5kWSYard0srVAobOjQebEr7Zy5lWqvnMv9jIWFBU6fPs3Q0BBdXV2cOnWq5vzgKxXJ5Plv
      ZyaRgE6Pg8d6mun0aLwZTfDTqQjfeGWWb7xSCQb/813d/K/39KLom0/+S0C318nXPnArH/3h
      LxiNb6741bTKKblcLmemyqqBoPp3VA3qpVKJSCRi/v5EABAum1WVuPO4l1uOuDk3keYvvzpL
      7u32wV5F4hG/HZci8+RqjrlCGasMH+vRGGhQ+f6FDOdjlY2+dp+Fz93s4sxCgc8/HaMsbvqv
      KlmWCYfDdQMAUHfACGDml6/kbr2eTCaD2+02WzxcjpmZGZaWljhy5Ai33norL7300rZ9hS6X
      AUwmMvzVyXFUWeJY0MtvH+4gpFl5fi7Kz2aiHFHcNRf/9QKald+/4zC/9eRr5tdUVcXldNDX
      7CXkUhlbSDA2F8Xn85FIJLDZbFitVrLZLK2trSwuVoYTiHbQwhVRLRIP3+VnqMfJSyfX+Muv
      zlJ6+8ibR5H4oN+OxyLzk9UcU/kyEnB/q417mm38ZDrH4xNZDMBplfiNm9xYFPiblxLERLpn
      39jqZA1UBsQHAoGa35Mkia6uLoaHh3c9FbS4uEh3d/cVBQCoPMWcPHmS++67j46ODs6ePbtL
      V1hfUTf4dSTOryNxNIvCnc1+/vCuId7XvnlDvZZ7WgK0uzVmkm8fnQ65+PK/v4G7erxIskSx
      pPOt15b4/R+Mk6ASiJW3G8s5nU5mZmY2vacIAMKOOTWZB27zM9Tj4JlXY/zbCyvmqRyPIvGg
      z05Ardzxz7x90uGwz8Kj3RpvLBf5/OsJykblTPWDAxq3dtj59skUo8vXd4/+a1EwWGlIVquA
      CrbfJ3C5XLjdbtbWauetL5eu69t+9k5V9wEOHz7MhQsX6vbL2QvZUplnZ5ZRJInPHGrb0Wts
      FoX/+4ND/MuZaU7PJPjG79zI0bZ35i1YLTKfu70JuwV+92vD5lNatcK6FhEAhG3ZrBIfvCdA
      Z4ud534V50cvRM0e7g5Z4r0NNtpsCk/FclzIVbqTd7oVPtHrYDFT5q9Pp8i8fYpnMKzysRtc
      /HIyxx8fsB791xJFUQiFQszPz9dM9+Tz+W171zc2Nu56AIDd3WOYmpqiu7ubUCjE1FTtqVp7
      ybKDuQzrPXUmQsht4yv/8WaOtLo3fV+SJB470cgXnhhnfEU3/+5KpZK5d1L9OxMDYYQtqRaJ
      99/p52ifkx+9sML3nn0nJ2yR4L0NNgY1lafjOf5ttXIW22+T+USfA4sEf/9Winjh7YZeNonf
      vtVDpqjzX5+PkyqIlf9aUG+Bj8fjXLhwge7u7ro/U53YtduqTwG7kV6qVs+uH5m4nUAggMfj
      MYNjuVy+7I3pibU0JV3HsoOnmrKu8/p8jPOxFCc6G3jgSO2juFaLTE/AyhsXKv+/Vo99ejwe
      dF3HMAxsNhu5XE4EAGEzl0Ph4bsqDdqe+1WcP/6Hd9IAqgT3eW0MOVReWMvzVKySK7Yp8NEe
      B00Ohe+OZ5h5u1pXkeADQw6Otdj4p1cTzK2JKt5rhSzLNDc3100DVZu9hcPhmkFA0zSCweCW
      m8mX40pOAdWyuLhIT08P4+PjNZ92qp/n8/k4evQoXq+XYrHIkSNHgEoQMQyD1157jUgkckmf
      PRpPcTqa4KZww7Y/eyaaYHQtjaIorKbqn5IzDIPVdCWt6nQ66e7uZnp62hyjWSwWWV1dFU8A
      wkYBr4VH7g4Q8qk89UqM7z6zTPX/M6sEd3tsHHWqvJzI88X5FDqVBf6hDjsnglaenMryzdF3
      8qhHmq185JiT58eyfP7pGHt4OlDYI4FAgEQiUbMwrFgsMj09TTabpaOjg3K5jK7rZoM2SZJo
      aWkhFovt6nn73Q4AExMTdHR0cOLECc6fP79hA1zTNFwuF+l0mqGhIQqFAq+99hrRaBRN08wT
      T01NTdx888384he/2LKI7mK6AX/4y/N87QO3YrfUnwSWK5X5w1eHMZBwaBo/fGOB//zoITTr
      5tdMr+YZX6v0YKoWh1U7o0qSZLaMWFpaQvmDP/iDP1j/4jfffJNXXnllx38A4drn91r4zMNh
      bj3q4dlXYzzx0irLsXc2Zg9pFj4erDRq+8FKjvmCjgTcHLbyH4acjMdLfH00w0Km8kju02T+
      xzs9+B0K//DLBBNRMZnrWiXLMn6/H5fLxdraWs20SyaTIZvNksvlmJ6eJhAImKdPFEVBkqQr
      PrVTZbFYaGxsZHl5eVfeDyp3zJFIxOxRFI1GzZ5G1VnIHo+Hrq4uXn31VbOjaaFQMOcWRyIR
      gsEgfX19rK2tXdKG8kwqy1Qiw/vaQ6jK5lRQpljif3/xDD+ZqpzfLxQKLCcLJLIlHjgSQlm3
      jxBLF/if/vEUS1mFxsZGsyLYYrGYfZWqVcChUEi0gjjIOppsfOCeAFZV5vFnl5lZ2jgursum
      8JDPTqRY5snVHNXRuj0eC5/ud3ButcgTU1nePvqPVYEPHXHSG1T55q9TzMTFwr9fGIaBruvm
      wnw5yuUykUikbi8du91OoVDA4XDQ29trFiGtrKwwMTFx2Z+7ntvtxuv17mo/nypJkjh+/Djt
      7e1kMhnGx8fNPkNdXV04nU6effbZLd9jcHCQnp4ezpw5Uzd1Vk+nx8F/PNrFva0B/DYrsXyB
      F+ZW+Nszk0wmageUW7ob+NydHbT4NEYWk/zt85PoWoCmpqYdfaZIAR1Ave0aH7o3wFqyxPee
      XTYbtFVV+/WslnS+sZwh+fZRnUaHzKf7nGRLOl88nST59vQtCbip3cbDgw6eGcnw+Om0aNq2
      z2SzWSYmJjhy5MiWJ3e2oigKTU1NlMtlFhYWNn2/UCgQDodZXl42K4UNw2B+fv5KL9+UzWbr
      1h9cKcMwOHXqFCMjIwwODnL48GFzrGUgEOD8+fPbvsf58+fJ5/MMDQ0RiUQuqQX1VCLD//ny
      WyiShPL2jIbyFqkul8vFG9NJziyM4HQ6KZVKhEItNDRsv59QJQLAASFJ0N+h8cF7AyzHivzz
      jxaJJTbeoTdbZR7xaRQMg3+NZoi9fXRTlSsbvM1OhW+OplnKvJMGaHQrfPZmN7PxEv/lubho
      2rZP2Ww2CoXCFT8FSJJEa2sr2Wx2U667mlvu7Ow0c/SlUslcBHfj5E65XL6i69+JbDbLG2+8
      gdvt5sYbbyQUCjE+Pr7jp5gLFy7Q19dHc3PzZY2w3G7hr0qlUubpJVmW6erqqtueox4RAK5z
      kgS3DLm596YGZpfy/N33FkimN27INakyHwpo5HWDH65kia7rPHhjUOVD3Ro/mMjy7bF3HkNV
      BT55g4smj4WvviZ69O93sizT39+/K0VUkiTR19dXs2todR/g+PHj6LpONps1K1Kr1cFXaq8D
      QFUqlSISiTA8PHzJm86Tk5P09PQwNTW1J43xAHMTOhAI4PP5dtRW+2IiAFynFBluO+bhPTf7
      eGM4yRe/MUv+ooHpYVXmEb8dw4DvRbOsrlv4+98evj6+VuSPX0+wfp7F7Z02Hhp08PjpNF//
      9dYtA4T9QZIk3O7NhUNX8n6dnZ2USqVNbSNKpRKxWIx4PI7b7WZgYKDSe16SaGtru6L8vaIo
      W/Yh2k2tra3Mzc1d1omjaoFZb28vo6Oju3I91YEu1VGXVquV1tZWHA7HZaf1RAC4zlgtEned
      8HLrUQ+nhlP8l3+epnDRwu9RJD7gt6PJEk+s5lhat7o3OxQ+3qsRL+h86c138vwArV6Fz93i
      ZiRS5I+fjlEUN/0HQrWVQC6XMztPQmVcY3XD8+K73JmZGfOkyfqnjqamJpLJ5GVXCFeHt+81
      RVFwOByXHawKhQJjY2P09fXtWgBQFAVN08z6DJfLddkLf5UIANcJqyrxgbsDHOpy8OIbcf7s
      n6e5+Oi1Jkt8OGDHZ6n065leN5nIrkj85oADu0Xiu+NZFjLvfE8CPnnCRaNb4W9/kWA1I5q2
      HSSRSASv12tuIq9X7Tl/sVKpZE6jWk+SJPr7+4lGo0xOTu74GlwuF+3t7ei6jt1u3/VagIu1
      tLRc8eb1/Pw8hw4dMtNll0vTNBwOB6VSiYaGBnP6124QAeAa57DLPHyXn0NdTp58aYXv/2xz
      1aVTlnjQZ6PVZuHHK1km1y38qgwf7tIY9Kl8ZzzDyEVHN/tDKp884eKn5zN8+6RI9xxETU1N
      TE9P11zoy+Uydru95vd0XadYLJqFYVXVEYarq6s7rg9wu90sLi4Si8XMAeh7RVEU7Hb7th1R
      t5PL5Th16pS5H3K5R2ENw0BVVZqamnA4HFd0TRcTAeAaFfBaeP9dAZoCVp56ZZXvP/dOg7Yq
      pyzxgM9Gq1XhmXieH6zkzOOZFgnubK60aH5iKmu25B4rfgAAIABJREFUaK7yaTKfvNFFWTf4
      4otrJHLirv8ga2lpQZZlstksqqqiKArZbJa1tTWamppqBgBJkupWAJdKJfx+v1kkVq1QrWdh
      YYHBwUHi8fiOZg5fiSvdp1hvfn4eRVE4duwYS0tLpNObB7psp1AoEAgEdn3xBxEArjnBBpWP
      vjeIVZX5ycurjM9uHrphk+ABn51Om8Kzby/86x32WfhYr4NXlwr86RsbN3gVCR4+7OBIk5Xv
      nEoxsSKKuQTM6tGzZ8+aw9mrU6e2WrgbGhro6+vblKtWVZVQKEQoFCKVSiFJEm+99daW1zA/
      P09HR8eed+2sbrLuhvb2djRNI5fLccMNN3D69OkdP1lUe/cEg8ENey+7SQSAa0RLyMqj9wex
      KBKPPxdlLrI5v2oB7m+wMeCw8Hw8z49XNy78nW6FT/Y5WMqU+YuTSbNFc9VQk8rHjrt4cTzL
      F57deT8T4fonSRI+n49Dhw4xMTGx42lf8XicM2fO0NPTg9PprPkzLpdrRwVTiUSCYDCI1+vd
      kzbTValUCrfbTSwWu6L3sVgsqKrKzMwMXq8Xh8PBPffcw89+9rMd/Xmr4x2bm5uveLO37jXu
      ybsKu2ag08H77/SRzes8/lyUpZXNXQAV4E6PlRtdVl5O5Pny/MZK3JAm89EeDQmJvz2bYu2i
      Vsw+Teazt7hJ5XX+7Lk42aIo5hJqc7vdDA4OMjs7y+rq6o5ek8vlWFhYoLe3l4WFhZoL2k7P
      sE9OTtLd3b2nASAej9Pa2npFAcDr9dLa2srMzAzZbJZIJIIkSRw5cgSv17vjCuHGxsZd2/Ct
      RQSAfUiSYKDDwYfvDzCzmOerP17aVLULlYX/VreV2zxWfpUs8P/Np1ifcbUrEo91a7S4FB4f
      zzCZ3JiPVRV45LCDwbCVr72eFK2ahR2x2Wy0tLTsOADA9vMDqk3nYrHYlhu8e7n5W1U9Y3+5
      gsEgTqeT4eFhcw9kamqKQ4cOUSgU8Hg8LC0tbfs+kiRdUluHyyECwD4iS3Bi0MUDt/mZXszx
      N/86TyqzeVGWgdveXvjfSBX44tzGhV+R4AOdGseDKk9MZvnW2OZGUsdbrHz0uJNnhkW6R7h0
      drud3t5esxPmdgzDYGVlBa/XW7OXjyzL9Pb2sra2RjQa3TIQ2Gw2Ghsb0XV9V7uCrletfbic
      gGO1WnE6nTidzg2nnHRdZ2VlBZfLtaP3UVX1sqp7L4UIAPuARakUb91+1MNbE2n+69dnyRU2
      b6zJwM1ulTvcNk6mC/z1XKUnv/l9CW4JW3mo3c6zszk+/3p208mgJrfCb9zsYilR5o+eEsVc
      wuWRJAm/34/P58PtdhONRneUlllZWUFVVdxud80nAa/Xa07bqnUOv9pcrqmpibW1NY4cObKj
      ge5Wq5VyubzjuQSpVAqXy0UymdzRz6+3sLBANBqlpaVlQwCQJIlMJmO2iNjuCUqW5T1/4hEB
      4CpSLRJ3Hvdw1wkvr55J8pdfm9lUtQuVQqwhh4X7vDbOZ0v8zUKKiycq9ngsfKxXYzRe4k/f
      SJC/uAhMlfjwESctXoVv/jrFQkKs/MKVqwYCp9PJyMiIuXlar13D2toayWSS3t7euukNSZII
      hUJEIpFN76OqqtlkrZpH9/v9Wy6miqIwNDREPp9nZWWF5eXlmgurpml0dXVRKpVQVRW73X5Z
      AcDj8RAOh1lZWdnw9ZmZGXp7e1lcXKSrq2vbAJDP5ykUCnt2AghEALgqrKpUKd7qdPDaW0m+
      8I/TlOucpOvXLDzkszOdK/H3i2mzJ39Vs0PmNwacxPI6//1sikSNWbt3dNl4/6CDH7yZ5tsn
      64+SE4TLZbPZzFbTLS0tTE1N1Z2Mpes6i4uLuN3uum0drFYrR48epVgsEolEWF5exul00tHR
      wejoqBkYFhYWOHTo0JaLqdPpZHFxkaWlJUKhEIODg6ysrOB0Os1hNslk0mxWp+s6FouF3t5e
      3G73JQWBcDiM0+lkeXl505+/UCgQj8fx+Xy0traax0OrwchiseBwOMhmsxSLRVRVJZPJiABw
      vXBpCo/c7aenTePJl1f54fMrdX+2z27hQZ+NSFHnHxZTZC8KEA1WiUe7HfjtMl85l2Y1vzmC
      tDUofOZGN+PRIv/PT2KUxeEeYQ9VT6tYrVb6+vqYm5urOTcAKimWXC5X92goVO72VVWlvb0d
      m82G3W7n/Pnzm+7et0rrhMNhQqEQ586dMyd/RSIRfD4fCwsLOBwOfD4fHR0dXLhwwaxpKJVK
      DA8Pc+jQISYnJ2u2tbhYKBTCbrfXbQFdLpeJRqOEw2FKpRIPPPAAiUSCM2fOkM1mKZfLZLNZ
      SqUSmqbhdDr3vOhNBIB3gdel8MjdAdoabTz50irfWTdr92K99soUrqWizlcj7wxjqbLK8P4O
      jQGfhR9MZBlb2/yorakSHz/uxO9U+MdfJlgRvXuEd1l1boDb7WZhYWHTXXR1U7ha3brVOfe1
      tTXi8XjdAqpcLkdnZ6f5cxebn5/fVKxWPeKZy+W2fHqIxWLY7fYdBYC1tTWzurle7j6Xy3H2
      7Fl6e3tZWlpicHCQO++8k2w2y5kzZ0gkEsiybE5WSyaTNDY2ijqAa1HYr/LY/UFs1krV7jd/
      Uv+0RIdN4RG/nZWizr9EMqQuWvgl4L1tNu5osvHMTI4fTW4uxJEkuKPLzvv6NX5wJs2b8yLd
      I1w9kiSZm7rnzp3b1AYhFouRSCQYHByse9qlXC4zOzu75QI8OzuLzWYjFAphtVo3nEoKBAKX
      1HTuYg6HY8fHXQuFAnNzc/T29m7Z/C2fzxOPx2lpaTFPPNlsNm699VZzoU+lUszOzuLxePZs
      8QcRAPZES8jKY+8JAhKPP7vMYo3iraqQKvNYQCNV1vl6jTt+gOMBlQ93a/xqqcAfvZaoOW6x
      y2/hUze6GIkU+X9/GhMjGYV9Q5Iks230+jvjUqmE1+vdsr2zYRg7SoPk83lmZ2c5fPgwKysr
      lMtlJEmiWCzuuGp5N1SfUrY7Qrr+lFN/fz9vvfUWZ8+eRVVVrFYrx48fZ3BwkEQiQaFQ2PHp
      pUslAsAukSToa9d4/51+8oVK1e5itP7CH7TIPOy3o0qbh7FUtbsqrRtmU7VbNwB47BKfuMGF
      qkj8nWjVLOxTNpsNVVUpFN75f0LXdUqlEvF4nFwuR3Nz86bXSZKEoig7nqp14cIFenp6iEQi
      NDU1MTc3d0XXXa/T6VbW1tZobGxkcXHxkl5XKBQoFAqk02l+/vOfEwgEiMfjHDt2bM+qgUUA
      uEKSBEM9Th6+y8/8cp6vP7HEao2q3SqfReIDfg2bJPFkLMtCjfP+AbvMp/srudF/PJcmVmOD
      V5LggQGN2zrsfOdUiuHI3m4WCcJeSCQS5smZWmRZZnBwkKWlpR0VnOVyOVwuF/F4fMebt/W4
      XC7S6fQlB4Dl5WWOHTvG8vLyju7cVVXF6XRuSJGVy2Uikciu9v6vRQSAK3DikIsHb/cxtZDn
      y9+eI7NFy+QGReJDAQ27LPHkao65wub/MDSLxEe7NVpdCl8fyTCXrv0fz0BY5VMnXLwymePz
      T8c2FXsJwn6j63rdeQKxWAyPx4NhGJvy3ZIkYbfb6ejowOVysbq6SiqVqltnoCgKa2tru1Ih
      fCUtIcbHxxkYGCCdTjM/P1/3emVZrhskJEmisbHxsj5/p0QAuETV4q07jnsZnsrw19+Yq1m1
      W+VVJB7yVaZw/dtqlvkaP2uR4MF2OydCVn50IcvXRze3boBKuuezN7sp6fDnz8XJiKZtwjWi
      UCjUXQTj8Th2u33L10uSRCAQwO/3o+s6Y2NjNYfJ6Lq+a3fMuq5jtVqRZdkMXq2traiqiizL
      5tzji3P9mqbR2dkJVCqbax2F1TQNu91Oc3MzExMTNZvDhUKhPa0BABEAdky1SNx7UwO3HnHz
      6pkEf/nVmU1D1tezy/CQz06TqvB0PMeF3OYoLwG3NVp5sN3Oywt5/uTXiZp38xYZ3j/o4Giz
      lW++kWJqVfToF94d6XT6ioaOV23VJqJQKDAzM0Mul6Ojo2PLz6ruCXR3dzM8PLxp4ay2UF6/
      aF+uYrHI3Nyc2dUzHA7T0tLCyZMnMQwDv9/P4OAg4+PjG/Y2qimoejUQAN3d3aysrDAyMlI3
      MFaPlO4lEQC2YVMl3ne7jxsGXLx0co0//Ur9ql0AVYIHfXZ67BaeieX4YbZ229d+r4WP9GiM
      xEv8ya83DmVZb7BR5ePHXbx8IccXnomL0z3Cu2q7O/Od2q61smEYl5Svt1qtZlXwxXfg8/Pz
      5hzeKw0C1T2K3t5eHA4HFy5cwOv1Eo1GiUQixONxent7yWQyWCwWpqam6qa7oBLAOjo60HV9
      y46g1aH0e00EgDo8ToWH7/LT2Wzn2V/F+fzfT2/58zapMoxl0KHybCzHE6u1F/6QJvPZASfx
      vM6Xz6RI1XmKCLkUPnWji3Re589+Ficn0j3CVbDVEc1L0drayvT0NBaLpWZrBavVai6kW1UH
      r+fxeAgGg5vy/dUz9P39/QwPD1/xtY+NjaEoCk1NTeYmc1WhUOD8+fO4XC7y+Tz9/f3YbLaa
      080aGhpobm5mampq26OpLpdrTzd/q0QAuIjXpfCBewK0hGz8+Ocr/OvT9at2obLw3+O1cdih
      8uJanqdjGzt0VrlViU/1OXCqEt8aTbNQ57imzQIPH3bSF1T59hspZuIi3SNc+9xuN+FwmIWF
      hZrpGV3XKZfLjI2NMTQ0ZKZxtksHtbe3m22W18tkMuRyOex2O+Vy+bJbKjQ2Npob1OVymfb2
      9k0BxzAMM6iNj49z7NgxWlpaNhWgNTQ0EI1GyWRq7/Gt53K59jz9AyIAmIINKo/eH8TtVHjy
      pVW+8eTWR84U4F6vjSNOlZcTeb44n6qZnrHKld78PV4LP7xQu3VD1YlWKx8+6uSn5zP86Exa
      nO4RrhuSJBEOh/F6vczOziJJ0oZFu1oPYLfbzYHsoVBo29751f2AhoYGJicnN5yoqaaCqsFm
      dHT0klJCAwMDrK6uMjo6ClSatW2V3gHo7Ozk9OnTNDU1bWokNzs7S2dn545OKNlsth1f55U4
      8AGgvdHGo/cH0XWDx3+2dfEWVDZu7/BYudll5dW3p3DVWqcl4J4WG/e22HhqOsf3L9R/5Au7
      FT53s4uFRJk/flr06BeuXzabjd7eXqCSFpqamjI3iNcPe6+evtnJ8JRqS2pN05iYmDDvsIvF
      IufOnTM/t7u7m/Hx8W3fT1EUenp6SCaTRKNR8+v1NmurwuEwqVSKYrFILBbbFACsVuuOn0Su
      ZCLZpTiwAaCrxc6H7g2QL+h8+6kIy7Gt/2Jk4Aanyt1eG2+mi3x5IUWNwlwk4Iagyge7NF6P
      FPiT1xM1fw7AqsDHb3DR5LHwz79KEE2LKl7h4LDZbPT19TE9Pb3prrhQKKDres3agHo0TWNw
      cJCpqalNKaF8Pr/jnHp1ktdOxjZWBYNBNE0zg1itvZNMJoPX693RpLG9ngRmfs678in7hCTB
      0V4n773Nx0q8yNefXGJ1i5QMVBb0Y06V+702zmWK/Lcaw1iqOtwKn+x1cCFR4s9PJsnWWfkl
      4NZOGw8ecvDTcxm+8evaXQ4F4Xony7J5KubiRXtlZYWWlpZLSocoikJXVxfZbLZmrn0nx0Or
      A2F2qqOjg3K5vOEJZm1tjebmZpaWltB1HY/HQ1NT07Yzj99tlxQAVldX8fv9e3Ute0aiMmv3
      oTv8jExl+LvvzZO+uMF+jddUF/6ROlO4qhqsEr8x4EQ3Kq0bavXmr2r1Knz2lkqP/j95OkaN
      FkCCcKDIskxXVxcOh4PFxUUzTWIYBmNjY/T09FxSQVQ1qIyOjm7YE1haWqKxsXHL8/kAbW1t
      G1I/W+nr62NlZaXmMddSqWQ+vbS0tHD+/PkdvackSfvzCcDn8+3VdewJ1SJx6xE3997UwLkL
      Gf7qa7Vn7a4nAYccFh5osDO+zcLvViUe69Focih8ZyzDZLJ+8t5lk/jIMRcNmiyatgnCRWRZ
      pqmpCYfDseHoZiaTIRKJmJW1O+Vyuejp6WFsbMy8404kEjQ3N28ZAILBIKlUCrvdjqZpZLNZ
      bDYbgUCA1dVVs/AsFAoRDAaZm5szK5IlSTI3edPpNIVCAUVRzAHxl/K72JcB4N04lrQbrKrE
      /Tc3cGLQza/PJfmLf9m6areqy6bwsN/OXL7MPyymydQ5hqPK8J5WO7eErTw+keFcrH4aSZbg
      7h479/Ro/ODNNGcXRY9+QajH7XZvaox2KemYKkmSaGhoIBAIbLibLxQKhEIhVlZWaqaCqlXP
      v/Vbv8Vzzz3Hyy+/zOHDh3n00Uf5yle+wvT0NFarFY/Hs6EIrVqh3NTURCKRIJ1OUyqV6Onp
      wefzcfr0aWw2G4VCYdsU0HbHX3fTuxJm1tbWcLlcu1ZUUo9qkXjoDj83HHLx3Ksx/uyftq7a
      rWq1Knw4YCdWqkzhungYy3o3BlU+1KXx/HyldcNWYxa7AxY+c6Obk3N5vvCMSPcIwnYkScLt
      dpsBoKGhgVAodNnv197ebjacg3cGszc3N5NMJpmdnTVTTpIkmQNgpqenaW9vN9NT1TGPAwMD
      3HHHHUiSRDKZ5KabbuLcuXP09/czOjpqpsj7+/u55557KBaLPP/88zz22GPYbDYWFxf56U9/
      uuU+RLlcvqTN7yvxrgQAj8ezp+/vdSk8dIef3naNZ1+N8Ud/N7X9i6gs/I/47eR0g69HMiS2
      WM2P+CsL//hakc//OrHlYu6ySXz6RhcWWeKLL8ZJXjzJXRCEukKhEIlEAr/fT1NT0xUthBaL
      hZ6eHkZGRkgmk5RKJWRZ5uzZsyiKwuDgIG+++SZQ2UCutqMoFArmU4SqquRyOWRZ5q677uLF
      F18kGAxy4sQJXn/9dT796U8zMzPD7Owsd999N1arlfvuu4/vfve7pFIpjhw5QiwW4+mnn+az
      n/0sfr9/x3sMe+1dCQB7Fcl8Hgsfvi+Iz2Ph6Ve2nrW7XotV5mGfRt4w6g5jqWp2KHyiTyOW
      1/nSm0mSW6SSZAne269xa4ed755KMbIsevQLwqWy2+0MDQ0Bu7N2yLJMX18f4+PjJJNJVFU1
      N4cVRaG9vZ25uTlkWUZVVVpbWzEMg8nJSe666y5mZ2dpaWkB3mlZUSwWWVpaMmsDisXihtSO
      JEnkcjlKpZKZz+/s7CSfz2+7oe10Oq+vFNBu83ssPPbeIB6nhX97cYXxmZ2NfAuqMh/y2ykZ
      8IOVLCtbLPwOi8Qn+xy4VYl/HcuwuM2mbXfAwm/e7Oa16Rx//ExsR4FIEITadnsBrD4JRCIR
      sx5AkiRSqRSZTIa2tjby+bw5SlKWZdbW1nj/+9/Pl770JZqbm9F13RzoXp1i9sADD/DSSy8x
      NDREV1eX2TLi3LlzfPKTnySbzfLCCy9w8803Y7PZ0DQNTdM27HNU9zgcDgdra2uXtGF8pSTj
      oh2Jr33ta/zFX/zFu3YBtRiGQalUQlGUDcUbHU02PnZHgDsabIyeXGNmKc9UrsxrycKWd/Fe
      ReIRvx2XIvP9lSzReq03Absi8aEuOwMNKt8czTCxxXQvgAZN5jM3udAN+NprSdL1jgwJgnDV
      zczM1BzV2NjYSG9vL8lkklwuh8ViIZVKbej9n0gk8Pl8eDweyuUyiUSCfD5PNpvF6XSiaRrp
      dJpcLke5XMbr9aLrOslkEk3T8Pl8RCIRdF2npaUFTdPMttLlcploNIrNZiObze75IJiqffcE
      UCqVzDaumqbR3d1NT6udx+4LcjsKtrcySKUCx5A55q88SmXKOt+NZnk8mmX9QUz328NYAhaZ
      J2M5ZvL1j2kqEtzdbOOeZhs/nsry3fHslq2XVQUeOlTp0f+tN1JMih79grDv1TteubS0hN/v
      Z3R0FKvVSltbG3a73VzgZVnGMAy8Xq95tPTo0aOMjY1RLpcpFAp4PB5zKDxUBt1UZTKZDYVp
      MzMz5j9LksShQ4eYnJzEYrHQ1NR0fW0C70Q6nSYajeL3+0mlUjg1lS//wXsoGTaWVgoov05i
      Uyw1fykOReZzYQcNFpm/X0zjkCt3/CFV5qexHBM1hrGsd/TtDd43lgt84Y36vfmrjrdUmra9
      OJ7lC8/GRbpHEK4RWy2q5XIZq9VKJpNhdHQUj8eDx+MhHA5z/vx5ent7mZqaMnP94+PjnDhx
      gtnZWaxW62WPoaweS4XKDfDs7CyaptHQ0HBZ73cp9k0AiEQieL1e3G43g4ODZDJpvvVUnKXV
      EocsCh/r8GzbGvaDfjs2WSJgl3k9W+DxtSyLW8zp7fZY+HivxkK6zJ+fTLBNjRgBp8xnb3YT
      TZf58+fiZEWPfkHYlwzDMDsXrF83AoHAhmrj9UZHRzly5Ahnz57FMAxzKHz1bl1VVbxeL8vL
      y6iqSnd3N6+//jrNzc14PB5sNhvpdJrFxcUNE8K2EwqFNjWpm52dxeVy7XlB2L4JAF1dXeY/
      u1wuXC4XF+Yrv8RHO13IO3gckiWJB5vsNHTKPCTZKRswtlbir08nORV95y88pMl8tEdDliT+
      +9kUiW3y9qoMHznupNOv8tVfJVncouJXEIT9IZFImBu81SCgqirNzc1MT28e8FTde6ymXzRN
      29AQrprr93gqN6Pnz59H13VKpRITExMkk0msVivd3d0sLy/j9/vNKWHZbNZsAuf3+1FVlaWl
      JRRFQVGUmqMtR0dH6evru6xCuJ3aNwGg3t29XYIBbeeXKRUqvfolScIiwaBP5U/v9vF/vBLn
      dLTAp/qc+O0y35/YunUDvN1DqM3KB4ec/OR8hu+cTIuRjIJwDaiOXhwfHycej9PQ0GCuMeFw
      GMMwNuThq7LZrDn4HTa2gF5YWKC1tZWxsbENr3E4HCwtLZljLYeHh2lqamJ5eZlkMkl3d7dZ
      Pby4uIjNZkOSJJaWliiXy+aBl/V9i/L5PIVCgXK5fDACQD2aIqFe4maIUabSv/ltdovEf77F
      w2tLBb43keXs6vbn84NOmc/d4mYpWeYLz8QoiJt+QbimKIpCf38/S0tLFItFs8d+9e6+llgs
      RktLi/k0YLVa0XWdgYEBMpnMpilfVqsVu92+qb3D+pNGExMTBAIBDMNgcXGRfD5Pe3s7N9xw
      A5FIhGAwyMrKCvF43CxEMwwDm82254Nh9n0AyJQNioaBlZ0HAblGxwm/Tean07ltF39NlXjs
      mJMWj4WvvZ5kSaR7BOGaJUkSTU1NG75mGIY5k1dRFLPSV1VVOjo6OHfuHLquY7VaaWlpweFw
      kEqlNqWNFEWhr6/PTAXVU21HMTExQaFQYHBw0EzxWK1WXn75ZRobG+nr6+Ps2bPm64rF4obA
      tRf2fQDIG3AuU+IW985+CaoDJHlzsJAkiSZn/V5EEnBHl537+zSeGs7wTdGjXxCuO4ZhkEgk
      mJubo7e318y/OxwOFhYWiMViZiomn8+bd/y1UtRdXV1MTEzUnRTW09Nj5virraCdTieZTMYM
      JtWjoaVSiWKxiCzLZsApl8ssLS3R3t6+278G074PAAA/XMlyo0tF2UEqSPPVnvpjGJCoc8yn
      xavw27e6ObdY5M+eE+keQbiexeNxOjo6iEQi5shGTdMYGhqq27O/VgdPm822afO2yul0mnf9
      63V3d/PWW29t+Fo4HMbtdjMzM0NHRwc+n48333yTUqlENBqltbV1x9PMLtU1EQBOp4t8N5rl
      k0Fty6Ogml9Cddb+frqkczq6Mf2jqRKfucmF2ybzNy8liG8zJEYQhGtbqVTC4XAQi8U2zOvN
      ZrO8/vrrl/Re5XK57oSxTCaDw+Ew/93v99Pc3GxWAq/n9XqJRCIcPXoUp9PJa6+9xtDQEKdP
      n6ZUKpmBYS8Kw66JAADwjUiGeEnnMyEHHsvGaJgs6ZwsFnk0qGH+jiTAIYFVAh2eOpM1J3XJ
      EtzTY+e+Xo1vvpFiVDRtE4QDYX5+nkgkctmvV1WVlpYWVFU1aww0TcPlcm0oBKvuM1R7/tjt
      dqanpzcEnapMJkMoFKJQKHD+/Hna29tZXFzEYrFQKpWIRCLm8dVd75G0q++2h3Tgx6s5fr6W
      54TLSpe9ks+fypU5mSqwVjYY0Yv87jE3brsMIQuS9Z1f1oduczOaLnF6vsBv3lzp0f9HT8W2
      7OcvCML1pbGxkWg0uu1c4IsFg0H8fj+6rjM7O0uhUGBpaYmBgQHzvarVvNV/n56e5vbbb+fV
      V18lHA7T0NDA9PT0hnYRAHNzcwDceOONZDIZYrEYgUAAv9+PYRiMjIwwNzeHqqoEg8FdDQLX
      TACoSpQNXljL88La5u/9aDLHi/N5vvBokCHrxl+SzSLxn97bwFd/scBf/myFbGlvcmqCIOxf
      NpsNp9NZ8068HrvdTktLCyMjIxty/slkknPnzgGVmSf9/f1miimdTlMsFolEItx+++2cPn2a
      TCbDsWPHOHfuHN3d3eRyuQ2D5KsbwouLi8TjcYrFIgMDA+b3p6encTqdG1JLV+q6WwWzZYOW
      QO24plpk3ppNcn58ZtuxbIIgXH+qBWKXsqmay+VYWFjg2LFjdacaJhIJhoeHGR8fZ3h4mOnp
      aTKZDOPj42QyGdLpNLquMzMzw/Hjx5mcnMTr9XLo0CGam5uxWCp9zqonkHK5HE6nk1gsZq5V
      uq7XrGC+EtddAJAkCaul/iOSQplIJGIOchYE4WDRNO2Sj1YuLy+ztra2oVq3nkKhQKlUYmVl
      BavVumERX11d5eTJkxQKBU6fPs3MzAzd3d0MDg5is9k4fPiwee7fbrdvOmVUPR66W667AFAo
      GbxVZ/C6bhicXaxM6KlVBi4IwrvPMIx39YlckiRCoRDNzc2bvjcwMMDg4CC9vb309PRs+N7a
      2hpDQ0OXnIO/uJpX0zRuuukmPB4PVquVfD7PhQsXOHXqFOPj4xw9ehSHw2G2o17PMAxzvvFu
      uO4CgAF8+edrpPIbN3kMw+Bbr0Y4OZOmubmJ5BS4AAAJY0lEQVSZ/v7+q3OBgiBskEqlWF1d
      fVc/s1ohXG253NLSwsDAANFolPPnzzMzM0OhUMDtdgOV0z/VHj6Xor+/3xwoX9XW1sbJkydp
      bGzEMAyz2KtaBJbNZgkGg8zPz9PV1UVvb++G1y8uLpqVzFfqmtsE3onzkSL/y7eX+e3b3BwK
      qyyupPjaSzP8ZLRMU1MTqqq+azM3BUHYmsvluiqfa7FY6OvrMzeEq8NdoJLGURQFi8ViDqef
      nJxkYWFhx08rwWCQ1dXVTa2ndV2nv78fj8fD2toaxWKR6elpDh8+bM4iKJVKqKqKxWLZlPfP
      ZrNMTk7uSqfQ6zIAAIxFi/z+j1cxDINIJEI6naa7u1ss/IKwjxQKBfL5vHmn/W6TJAmPx4Nh
      GAwODrK0tMTKygqGYWC321FVlXw+b27qrmexWHA4HCSTyU1Bobm5mUAgwJkzZzZ83W63m62k
      LRYLx44dY2Jigkwms6EPUFU6nTZnB6+XSqVYXFy84irh6zYAVEmSRDgcNv9ZEIT9I51OE4lE
      OHTo0FW9DkmScDgcdHV1EQqFzLRUvSlfdrsdl8uFJEnouk46nTaDgNVqxev1mo3cSqUSbreb
      xsZG3G632QqiVCqRTqc35fmrAoHAhqBT7Rpa/ZzFxUVWV1fNNJbP58Ptdu94ndN1/foPACAW
      fkHYrxoaGt6V0Yc7JUmSmZKan5/f9mfD4TC6rpuD5KubtIqiMDMzYxaQLS8vMzs7i8PhoLe3
      l/n5edLpNA0NDZv6BVVFIhHa29vN4OjxePD7/YyMjJg/UygUzMrm5eVlfD4fzc3Nm2oFDMMw
      U1GGYZhHSg9EABAEYfcsLi4SCAR2ZVDJfr05c7lcNDc3Mzs7W/P71QW/WCwyMjKCpmlks1lz
      z8BisZDL5WhqamJsbMw8zlmtCejo6KCpqYkLFy5sSh9pmoaiKKRSKaamptA0jba2NsbGxrDb
      7YTD4ZrtLKpjMKsFZNU+RWtraywuLm6qQIYDkAISBGF3hUKhPetOuZ80NTWhaRorKyukUqkN
      c37dbjetra0sLCwAmKdyqr17qgv0+rv1qmw2y9TUFP39/ayurm4619/T04PFYmFiYoLGxkYk
      SaJYLJrHPwcGBvB4PMRiMbP9xHrJZJKJiQkkScLv92+aYLaeCACCIFySetWw1xtJkmhoaMDr
      9WIYBvF4nEQiQTKZpKGhgZmZmZobtDuRy+UYHh6mr68PXddJpVJ4PB4URcFmszE3N0dbWxvD
      w8MAG3oXjY6OIkkSAwMDNQMAYAYLj8eDqqpm+icUCuF0OllaWqo8sVzW1QuCIBwQkiSZd9PV
      Bm3FYtE85jkzM3PJzeWgkr+vLvDHjx9nZGSEfD5vppbWD6Rf7+KUkSRJtLS0sLi4uOlpYmVl
      hfb2dqLRKIlEAp/Px+TkJF1dXYyMjIgAIAiCcCkkSTLbNYTDYWRZZmZmpu5ksJ3I5XLmPsHF
      dQO1VDdyOzo6cDgcOByODXOIq5LJJOl0moGBAWw2G+l0mkKhYO4ziAAgCIJwBYLBoJlWqXds
      dDulUglFUS6pz8/o6Kg5lcxms9HX12c+Uayn6zqZTIZwOGzWGoyOjnLs2DERAARBEK6Upml0
      dnZit9uJRCJ1z/bXE41G6enpYXx8fMfpJMMwzKeGfD7P8vIyhw4dMl9fLpfNpwmn08no6Kj5
      2kwmw6lTp0QAEARB2A3V/kKNjY1mIdnq6uqOUkOJRIJisUh3dzfj4+OX9fnVz6uSZRlVVenr
      66tZZWwYhggAgiAIu0mSJNxuNy6Xi/b2dtbW1pient5wjLQWTdMu+1RRLbquY7fbt/xcEQAE
      QRD2QPX0kM/nw+VysbS0RCaTIZfLbUoRqapKe3s7p0+f3tVr8Hg8dYvZQAQAQRCEPaeqKm1t
      bQBm64hEIkEikWBtbY2BgQHeeuutXZ+LUG0vXY8IAIIgCO+iat9/h8NBOBwml8sRiUR2dPxz
      J++9fhO5ekKo3qa0CACCIAhXiSzL5ohKl8t12cNeNE0jGAxitVoxDINyuUwsFsNqtYo9AEEQ
      hP1KkiQURSEYDOLz+YhEIhQKBXOvYKsjpVar1ewAenFzvlAoRKFQoKmpiUgkUrPGQAQAQRCE
      fUJRlA2zinVdJxKJEI1GyeVyGIZhtqUIh8M4nc66HVUlScJms9HW1kYwGGR8fHzzUJs9/dMI
      giAIl02WZbO2oFAoVIa4WCxYLJZLaqVtt9sZHBxkampqQwM5EQAEQRD2uerd/JVQFIXu7m5k
      WTZbVlz/Tb0FQRAEoBJIOjs7aWlpAcQTgCAIwoFSbR+t67p4AhAEQThoJEmira1NBABBEISD
      SJIkEQAEQRAOKhEABEEQDigRAARBEA4oEQAEQRAOKBEABEEQDigRAARBEA4oEQAEQRAOKBEA
      BEEQDigRAARBEA4oEQAEQRAOKBEABEEQDigRAARBEA4oEQAEQRAOKBEABEEQDigRAARBEA4o
      EQAEQRAOKBEABEEQDigRAARBEA4oEQAEQRAOKBEABEEQDigRAARBEA4oEQAEQdjXDMPAMIyr
      fRnXJREABEHY95aXl6/2JVyXRAAQBGFfkySJcDh8tS/juiQCgCAIwgElAoAgCMIBJQKAIAjC
      ASUCgCAIwgElAoAgCMIBJQKAIAjCASUCgCAIwgElAoAgCMIBJQKAIAjCASUCgCAIwgElAoAg
      CMIBJQKAIAjCASUCgCAIwgElAoAgCMIBJQKAIAjCASUCgCAIwgElAoAgCMIBJQKAIAjCASUC
      gCAIwgElAoAgCMIBJQKAIAjCASUCgCAIwgElAoAgCMIBJQKAIAjCASUCgCAIwgElAoAgCMIB
      JQKAIAjCAbUvAkAsFqNUKl3tyxAEQThQLFf7AgC8Xi+SJF3tyxAEQThQ9kUAkOV98SAiCIJw
      oIiVVxAE4YDatwEgm80SjUav9mUIgiBct/ZtAIDK5rAgCIKwN/ZtANA0jf7+/qt9GYIgCNet
      fRsABEEQhL0lAoAgCMIBJQKAIAjCASUCgCAIwgElAoAgCMIBJQKAIAjCASUCgCAIwgF1TQcA
      wzBYXFxkfn4ewzCu9uUIgiBcU67pAAAQj8eZn58nlUpd7UsRBEG4puyLbqCXS5IkBgYGSKVS
      FIvFq305giAI15RrOgBApZW0x+O52pchCIJwzbnmU0CCIAjC5REBQBAE4YASAUAQBOGAEgFA
      EAThgPr/AcPUpfPYpQh4AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
